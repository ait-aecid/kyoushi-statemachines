{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Cyber Range Kyoushi - State Machines \u00b6 User simulation state machines for the AIT Cyber Range and AECID testbeds.","title":"Overview"},{"location":"#cyber-range-kyoushi-state-machines","text":"User simulation state machines for the AIT Cyber Range and AECID testbeds.","title":"Cyber Range Kyoushi - State Machines"},{"location":"contributing/","text":"Contributing \u00b6 Packaging and Installation \u00b6 This project uses poetry for packaging and dependency management. So before you can start developing you will have to install poetry . Please refer to the poetry documentation on how to install and use poetry . Configure Access Token \u00b6 Important This package depends on cr-kyoushi-simulation which is a private package. To install it you must configure poetry with your private GitLab access token. You will have to create a GitLab Access token with at least read_api and read_registry privileges. Go to https://git-service.ait.ac.at/-/profile Open the Access Tokens settings Enter a name for your access token Select at least read_api and read_registry Click Create personal access token Copy and save the created access token Add the access token to your poetry config $ poetry config http-basic.simulation __token__ Password: <enter the access token> Install for development \u00b6 After you have installed poetry and added your access token you can use it to install a local development clone of the repository using: $ poetry install Tests can be run using poetry or by using the Makefile provided with the project. $ poetry run pytest $ make test # or if you wish to generate a HTML coverage report $ make test-html Code Quality and Formatting \u00b6 This project uses pre-commit and various code linters and formatters to ensure that committed code meets certain quality criteria. Note that these criteria are also checked by CI pipelines. This means that should you push unchecked code the pipelines will fail! So it is highly recommend that you install pre-commit so that such code does not make it into the the git history. To make sure that you don't accidentally commit code that does not follow the coding style, you can install a pre-commit hook that will check that everything is in order: $ poetry run pre-commit install The pre-commit git hook runs automatically when you try to commit your changes. It will automatically check and try to format your code. Should your code not conform to the quality criteria or if some re-formatting was necessary the commit will fail. In such cases verify the formatting changes made by pre-commit and fix any other code quality issues reported by the checks before committing your changes again. You can also manually run the pre-commit hook by issuing the following command. $ poetry run pre-commit run --all-files Alternatively you can also use the Makefile to run just the quality checks, auto formatting or just specific checks. $ make check $ make format Run make list for a full list of available make targets. Build & View Documentation \u00b6 This project uses MkDocs for documentation. If you wish to view or edit the docs you can start a live server by running: $ mkdocs serve The live server will automatically detect changes and refresh the documentation. We also provide convenience make targets for building the documentation and starting the live server: # build the distributable documentation site $ make docs # build a offline viewable documentation site, without web server simply open the index file # (Note that the search function is disabled with this) $ make docs-offline # start the mkdocs live server $ make docs-serve","title":"Contributing"},{"location":"contributing/#contributing","text":"","title":"Contributing"},{"location":"contributing/#packaging-and-installation","text":"This project uses poetry for packaging and dependency management. So before you can start developing you will have to install poetry . Please refer to the poetry documentation on how to install and use poetry .","title":"Packaging and Installation"},{"location":"contributing/#configure-access-token","text":"Important This package depends on cr-kyoushi-simulation which is a private package. To install it you must configure poetry with your private GitLab access token. You will have to create a GitLab Access token with at least read_api and read_registry privileges. Go to https://git-service.ait.ac.at/-/profile Open the Access Tokens settings Enter a name for your access token Select at least read_api and read_registry Click Create personal access token Copy and save the created access token Add the access token to your poetry config $ poetry config http-basic.simulation __token__ Password: <enter the access token>","title":"Configure Access Token"},{"location":"contributing/#install-for-development","text":"After you have installed poetry and added your access token you can use it to install a local development clone of the repository using: $ poetry install Tests can be run using poetry or by using the Makefile provided with the project. $ poetry run pytest $ make test # or if you wish to generate a HTML coverage report $ make test-html","title":"Install for development"},{"location":"contributing/#code-quality-and-formatting","text":"This project uses pre-commit and various code linters and formatters to ensure that committed code meets certain quality criteria. Note that these criteria are also checked by CI pipelines. This means that should you push unchecked code the pipelines will fail! So it is highly recommend that you install pre-commit so that such code does not make it into the the git history. To make sure that you don't accidentally commit code that does not follow the coding style, you can install a pre-commit hook that will check that everything is in order: $ poetry run pre-commit install The pre-commit git hook runs automatically when you try to commit your changes. It will automatically check and try to format your code. Should your code not conform to the quality criteria or if some re-formatting was necessary the commit will fail. In such cases verify the formatting changes made by pre-commit and fix any other code quality issues reported by the checks before committing your changes again. You can also manually run the pre-commit hook by issuing the following command. $ poetry run pre-commit run --all-files Alternatively you can also use the Makefile to run just the quality checks, auto formatting or just specific checks. $ make check $ make format Run make list for a full list of available make targets.","title":"Code Quality and Formatting"},{"location":"contributing/#build-view-documentation","text":"This project uses MkDocs for documentation. If you wish to view or edit the docs you can start a live server by running: $ mkdocs serve The live server will automatically detect changes and refresh the documentation. We also provide convenience make targets for building the documentation and starting the live server: # build the distributable documentation site $ make docs # build a offline viewable documentation site, without web server simply open the index file # (Note that the search function is disabled with this) $ make docs-offline # start the mkdocs live server $ make docs-serve","title":"Build &amp; View Documentation"},{"location":"license/","text":"MIT License Copyright (c) 2020 AIT Austrian Institute of Technology Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"reference/core/model/","text":"\u00b6 BaseInfo pydantic-model \u00b6 Base class for context info models clear ( self ) \u00b6 Resets the info object to its initial state. i.e., all fields are None Source code in statemachines/core/model.py def clear ( self ): \"\"\"Resets the info object to its initial state. i.e., all fields are `None` \"\"\" for field in self . __fields__ : self . __setattr__ ( field , None )","title":"Model"},{"location":"reference/core/model/#cr_kyoushi.statemachines.core.model","text":"","title":"cr_kyoushi.statemachines.core.model"},{"location":"reference/core/model/#cr_kyoushi.statemachines.core.model.BaseInfo","text":"Base class for context info models","title":"BaseInfo"},{"location":"reference/core/model/#cr_kyoushi.statemachines.core.model.BaseInfo.clear","text":"Resets the info object to its initial state. i.e., all fields are None Source code in statemachines/core/model.py def clear ( self ): \"\"\"Resets the info object to its initial state. i.e., all fields are `None` \"\"\" for field in self . __fields__ : self . __setattr__ ( field , None )","title":"clear()"},{"location":"reference/core/selenium/","text":"\u00b6 This module contains configuration and utility functions for using Selenium webdrivers as part of simulations. SeleniumConfig pydantic-model \u00b6 Configuration class for selenium drivers accept_insecure_ssl: bool pydantic-field \u00b6 If the browser should accept insecure SSL connections or not. arguments: str pydantic-field \u00b6 Additional commandline arguments for the webdriver capabilities: Any pydantic-field \u00b6 List of desired capabilities download: SeleniumDownloadConfig pydantic-field \u00b6 The file download configuration for the webdriver driver_manager: WebdriverManagerConfig pydantic-field \u00b6 Configuration for the webdriver manager used to download and install webdrivers. headless: bool pydantic-field \u00b6 If the browser should be run in headless mode or not. implicit_wait: float pydantic-field \u00b6 The implicit time the selenium driver waits when looking up an element int: int pydantic-field \u00b6 The windows height in pixels proxy: SeleniumProxyConfig pydantic-field \u00b6 The proxy configuration to use for the webdriver type: WebdriverType pydantic-field \u00b6 The webdriver type to use. window_height: int pydantic-field \u00b6 The windows height in pixels window_width: int pydantic-field \u00b6 The windows width in pixels window_x_position: int pydantic-field \u00b6 The windows x-axis position in pixels window_y_position: int pydantic-field \u00b6 The windows y-axis position in pixels SeleniumContext \u00b6 Context model for selenium state machines SeleniumContextModel pydantic-model \u00b6 Context model for selenium state machines main_window: str pydantic-field required \u00b6 The main window of the webdriver SeleniumDownloadConfig pydantic-model \u00b6 Configuration class for the selenium drivers download settings autosave: str pydantic-field \u00b6 List of mime type to autosave (required for firefox prompt=False) path: Path pydantic-field \u00b6 The download directory to use prompt: bool pydantic-field \u00b6 If the download dialog should be shown or not SeleniumProxyConfig pydantic-model \u00b6 Selenium webdriver proxy configuration enabled: bool pydantic-field \u00b6 If a proxy should be used or not host: str pydantic-field \u00b6 The proxy host password: SecretStr pydantic-field \u00b6 The socks password to use for authentication port: PositiveInt pydantic-field \u00b6 The proxy port socks: bool pydantic-field \u00b6 If a socks proxy should be used instead of a HTTP proxy socks_version: PositiveInt pydantic-field \u00b6 The SOCKS protocol version to use username: str pydantic-field \u00b6 The socks username to use for authentication SeleniumStatemachine \u00b6 Generic selenium state machine class destroy_context ( self ) \u00b6 Destroy and clean up the state machine execution context Note Override or extend this function if your state machine needs run some logic or free Context information after it has finished executing. Source code in statemachines/core/selenium.py def destroy_context ( self ): if self . context is not None : self . context . driver . quit () setup_context ( self ) \u00b6 Initialize and setup the state machine execution context Note Override this function if your state machine needs run some logic or set Context information before it can be executed. Source code in statemachines/core/selenium.py def setup_context ( self ): raise NotImplementedError () SeleniumStatemachineConfig pydantic-model \u00b6 Web browser state machine configuration model Examples: max_errors : 0 start_time : 2021-01-23T9:00 end_time : 2021-01-29T00:01 schedule : work_days : monday : start_time : 09:00 end_time : 17:30 friday : start_time : 11:21 end_time : 19:43 selenium : driver_manager : cache_valid_range : 5 # days type : firefox window_width : 800 window_height : 600 accept_insecure_ssl : yes selenium: SeleniumConfig pydantic-field \u00b6 Selenium configuration for the web browser user Statemachine \u00b6 Basic selenium state machine class with a selenium context setup_context ( self ) \u00b6 Initialize and setup the state machine execution context Note Override this function if your state machine needs run some logic or set Context information before it can be executed. Source code in statemachines/core/selenium.py def setup_context ( self ): driver = self . get_driver () self . context = SeleniumContextModel ( driver = driver , main_window = driver . current_window_handle , fake = self . fake , ) WaitForScrollFinish \u00b6 Utility class that can be used to wait for a vertical scroll to finish. Can also be used as context manager to encapsulate a code block with the wait directive. Meaning the y_pos is saved at the start of the block and the check is started once the indented block has finished. Examples: ```python with WaitForScrollFinish(driver): # y post is magically saved here driver.find_element_by_id('some-input').send_keys('input') driver.find_element_by_id('some-button').click() # scroll checks and waits magically begin here ``` __init__ ( self , driver , y_pos = 0 , timeout = 120 ) special \u00b6 Parameters: Name Type Description Default driver WebDriver The webdriver instance required y_pos int The initial y position to use. Used when you want to manually call the wait functions. 0 timeout int The maximum amount of time to wait for the scroll to finish. 120 Source code in statemachines/core/selenium.py def __init__ ( self , driver : webdriver . Remote , y_pos : int = 0 , timeout : int = TIMEOUT , ): \"\"\" Args: driver: The webdriver instance y_pos: The initial y position to use. Used when you want to manually call the wait functions. timeout: The maximum amount of time to wait for the scroll to finish. \"\"\" self . driver : webdriver . Remote = driver self . timeout : int = timeout self . y_pos_org : int = y_pos WebdriverManagerConfig pydantic-model \u00b6 Configuration class for the selenium webdriver manager cache_valid_range: PositiveInt pydantic-field \u00b6 The validity of the driver cache in days. latest_release_url: AnyUrl pydantic-field \u00b6 The URL for the latest version of the webdriver log_level: LogLevel pydantic-field \u00b6 Log level for the webdriver manager. path: Path pydantic-field \u00b6 The webdriver cache path url: AnyUrl pydantic-field \u00b6 The base URL to download the webdriver from. (e.g., https://chromedriver.storage.googleapis.com ) WebdriverType \u00b6 Enum for the different Selenium webdriver types driver_wait ( driver , check_func , timeout = 120 , poll_frequency = 0.5 , ignored_exceptions = None ) \u00b6 Wrapper function for WebDriverWait until with a custom timeout value Parameters: Name Type Description Default driver WebDriver The webdriver instance required check_func Callable[[selenium.webdriver.remote.webdriver.WebDriver], Optional[Any]] The poll check function required timeout Union[float, int] The maximum time to wait. 120 poll_frequency float The poll frequency. 0.5 ignored_exceptions Tuple[Exception, ...] The exceptions to ignore and not count as errors. None Source code in statemachines/core/selenium.py def driver_wait ( driver : webdriver . Remote , check_func : Callable [[ webdriver . Remote ], Optional [ Any ]], timeout : Union [ float , int ] = TIMEOUT , poll_frequency : float = POLL_FREQUENCY , ignored_exceptions : Tuple [ Exception , ... ] = None , ): \"\"\"Wrapper function for WebDriverWait until with a custom timeout value Args: driver: The webdriver instance check_func: The poll check function timeout: The maximum time to wait. poll_frequency: The poll frequency. ignored_exceptions: The exceptions to ignore and not count as errors. \"\"\" WebDriverWait ( driver , timeout , poll_frequency , ignored_exceptions ) . until ( check_func ) element_in_viewport ( driver , elem ) \u00b6 Checks wether an element is not only visible but is also in the current viewport. See https://stackoverflow.com/a/46816183 Parameters: Name Type Description Default driver WebDriver The webdriver required elem WebElement The element to check required Returns: Type Description bool True if the element is in the viewport False otherwise. Source code in statemachines/core/selenium.py def element_in_viewport ( driver : webdriver . Remote , elem : WebElement ) -> bool : \"\"\"Checks wether an element is not only visible but is also in the current viewport. See https://stackoverflow.com/a/46816183 Args: driver: The webdriver elem: The element to check Returns: `True` if the element is in the viewport `False` otherwise. \"\"\" elem_left_bound = elem . location . get ( \"x\" ) elem_top_bound = elem . location . get ( \"y\" ) elem_width = elem . size . get ( \"width\" ) elem_height = elem . size . get ( \"height\" ) elem_right_bound = elem_left_bound + elem_width elem_lower_bound = elem_top_bound + elem_height win_upper_bound = driver . execute_script ( \"return window.pageYOffset\" ) win_left_bound = driver . execute_script ( \"return window.pageXOffset\" ) win_width = driver . execute_script ( \"return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\" ) win_height = driver . execute_script ( \"return window.innerHeight || document.documentElement.clientHeight|| document.body.clientHeight;\" ) win_right_bound = win_left_bound + win_width win_lower_bound = win_upper_bound + win_height return all ( ( win_left_bound <= elem_left_bound , win_right_bound >= elem_right_bound , win_upper_bound <= elem_top_bound , win_lower_bound >= elem_lower_bound , ) ) get_new_window ( driver , handles_before ) \u00b6 Get the new window based on the current and previous window list. Parameters: Name Type Description Default driver WebDriver The webdriver required handles_before List[str] The window list before the new window opened required Returns: Type Description Optional[str] The window handle for the new window Source code in statemachines/core/selenium.py def get_new_window ( driver : webdriver . Remote , handles_before : List [ str ], ) -> Optional [ str ]: \"\"\"Get the new window based on the current and previous window list. Args: driver: The webdriver handles_before: The window list before the new window opened Returns: The window handle for the new window \"\"\" # get new window and return handle_after = driver . window_handles if len ( handle_after ) > len ( handles_before ): return set ( handle_after ) . difference ( set ( handles_before )) . pop () return None get_webdriver ( config , driver_path = None ) \u00b6 Gets and configures a Selenium webdriver instance based on the given configuration. Parameters: Name Type Description Default config SeleniumConfig The selenium configuration required Returns: Type Description WebDriver The initialized and configured Selenium webdriver instance Source code in statemachines/core/selenium.py def get_webdriver ( config : SeleniumConfig , driver_path : Optional [ str ] = None , ) -> webdriver . Remote : \"\"\"Gets and configures a Selenium webdriver instance based on the given configuration. Args: config: The selenium configuration Returns: The initialized and configured Selenium webdriver instance \"\"\" driver_info = _MANAGER_MAP [ config . type ] fox_profile = None # install webdriver and get path if not already given if driver_path is None : driver_path = install_webdriver ( config ) options = driver_info [ \"driver_options\" ] # configure webdriver capabilities for cap , cap_val in config . capabilities . items (): options . set_capability ( cap , cap_val ) # configure webdriver arguments for arg in config . arguments : options . add_argument ( arg ) if config . type != WebdriverType . EDGE and config . type != WebdriverType . IE : # configure headless mode via driver options options . set_headless ( config . headless ) # configure SSL cert insecure option options . set_capability ( \"acceptInsecureCerts\" , config . accept_insecure_ssl ) # configure proxy if config . proxy . enabled : proxy_url = f \" { config . proxy . host } : { str ( config . proxy . port ) } \" proxy = Proxy () proxy . proxy_type = ProxyType . MANUAL proxy . autodetect = False proxy . ftp_proxy = proxy_url if config . proxy . socks : proxy . socks_proxy = proxy_url # auth settings if config . proxy . username is not None and config . proxy . password is not None : proxy . socks_username = config . proxy . username proxy . socks_password = config . proxy . password else : proxy . http_proxy = proxy_url proxy . ssl_proxy = proxy_url # options: webdriver.ChromeOptions # apply proxy settings proxy . add_to_capabilities ( options . capabilities ) if config . proxy . socks : # need to manually set the socksVersion since # the proxy config object does not expose the setting options . capabilities [ \"proxy\" ][ \"socksVersion\" ] = config . proxy . socks_version download_path = ( # set download path if we have one str ( config . download . path . absolute ()) # otherwise set empty string if config . download . path is not None else \"\" ) if not config . download . prompt : # create download directory os . makedirs ( download_path , exist_ok = True ) if config . type == WebdriverType . CHROME or config . type == WebdriverType . CHROMIUM : download_options = webdriver . ChromeOptions () download_options options . experimental_options . setdefault ( \"prefs\" , {}) . update ( { \"download.default_directory\" : download_path , \"download.prompt_for_download\" : False , \"download.directory_upgrade\" : True , \"download.download_restrictions\" : 0 , \"safebrowsing_for_trusted_sources_enabled\" : False , \"safebrowsing.enabled\" : False , } ) elif config . type == WebdriverType . FIREFOX : fox_profile = webdriver . FirefoxProfile () fox_profile . set_preference ( \"browser.download.folderList\" , 2 ) # custom location fox_profile . set_preference ( \"browser.download.manager.showWhenStarting\" , False ) fox_profile . set_preference ( \"browser.download.dir\" , download_path ) fox_profile . set_preference ( \"browser.download.manager.alertOnEXEOpen\" , False ) fox_profile . set_preference ( \"browser.download.manager.closeWhenDone\" , False ) fox_profile . set_preference ( \"browser.download.manager.focusWhenStarting\" , False ) # application/octet-stream,application/vnd.ms-excel fox_profile . set_preference ( \"browser.helperApps.neverAsk.saveToDisk\" , \",\" . join ( config . download . autosave ), ) # need to disable pdf viewer as well fox_profile . set_preference ( \"pdfjs.disabled\" , True ) # common arguments args = { \"executable_path\" : driver_path , \"options\" : options , } if fox_profile is not None : args [ \"firefox_profile\" ] = fox_profile # create driver driver = driver_info [ \"driver\" ]( ** args ) # for chrome we need to enable auto download # after start if not config . download . prompt and ( config . type == WebdriverType . CHROME or config . type == WebdriverType . CHROMIUM ): chrome_enable_download_headless ( driver , download_path ) # configure driver implicit wait time driver . implicitly_wait ( config . implicit_wait ) # configure browser display size and position driver . set_window_size ( width = config . window_width , height = config . window_height ) driver . set_window_position ( x = config . window_x_position , y = config . window_y_position ) return driver get_webdriver_manager ( config ) \u00b6 Gets and configures a webdriver manager instance for the given selenium config. Parameters: Name Type Description Default config SeleniumConfig The selenium config required Returns: Type Description DriverManager Configured DriverManager instance Source code in statemachines/core/selenium.py def get_webdriver_manager ( config : SeleniumConfig ) -> DriverManager : \"\"\"Gets and configures a webdriver manager instance for the given selenium config. Args: config: The selenium config Returns: Configured `DriverManager` instance \"\"\" manager_info = _MANAGER_MAP [ config . type ] manager_options = dict ( manager_info [ \"manager_options\" ]) manager_options . update ( filter_none_keys ( config . driver_manager . dict ())) # convert log level to int manager_options [ \"log_level\" ] = int ( manager_options [ \"log_level\" ]) return manager_info [ \"manager\" ]( ** manager_options ) install_webdriver ( config ) \u00b6 Installs the configured Selenium driver and returns the install path. Parameters: Name Type Description Default config SeleniumConfig The Selenium configuration determining which driver gets installed and how. required Returns: Type Description str Path to the installed driver binary. Source code in statemachines/core/selenium.py def install_webdriver ( config : SeleniumConfig ) -> str : \"\"\"Installs the configured Selenium driver and returns the install path. Args: config: The Selenium configuration determining which driver gets installed and how. Returns: Path to the installed driver binary. \"\"\" manager = get_webdriver_manager ( config ) return manager . install () js_set_text ( driver , element , text ) \u00b6 Set the text value of an input element directly with Javascript. This can be useful for avoiding onChange event listeners evaluating partial texts. Parameters: Name Type Description Default driver WebDriver The webdriver required element WebElement The input element to set the text for required text str The text to set required Source code in statemachines/core/selenium.py def js_set_text ( driver : webdriver . Remote , element : WebElement , text : str ): \"\"\"Set the text value of an input element directly with Javascript. This can be useful for avoiding onChange event listeners evaluating partial texts. Args: driver: The webdriver element: The input element to set the text for text: The text to set \"\"\" driver . execute_script ( f \"arguments[0].value = ' { text } '\" , element , ) slow_type ( element , text , delay = ApproximateFloat ( min = 0.05 , max = 0.35 )) \u00b6 Send a text to an element one character at a time with a delay. Parameters: Name Type Description Default element WebElement The element to send the text to required text str The text to send required delay Union[float, cr_kyoushi.simulation.model.ApproximateFloat] The delay to use in between key strokes. Average typing speed is 180-200 characters per minute or 3~ per second. The default was set with this in mind. ApproximateFloat(min=0.05, max=0.35) Source code in statemachines/core/selenium.py def slow_type ( element : WebElement , text : str , delay : Union [ float , ApproximateFloat ] = ApproximateFloat ( min = 0.05 , max = 0.35 , ), ): \"\"\"Send a text to an element one character at a time with a delay. Args: element: The element to send the text to text: The text to send delay: The delay to use in between key strokes. Average typing speed is 180-200 characters per minute or 3~ per second. The default was set with this in mind. \"\"\" # convert to approximate float if we got a float if not isinstance ( delay , ApproximateFloat ): delay = ApproximateFloat . convert ( delay ) # type the text for character in text : element . send_keys ( character ) time . sleep ( delay . value ) type_linebreak ( driver , count = 1 ) \u00b6 Sends a linebreak to the currently focused input element (e.g., textarea). This is done using Shift + Enter so no submit is triggered. Parameters: Name Type Description Default driver WebDriver The webdriver required count The amount of line breaks to write 1 Source code in statemachines/core/selenium.py def type_linebreak ( driver : webdriver . Remote , count = 1 ): \"\"\"Sends a linebreak to the currently focused input element (e.g., textarea). This is done using ++shift+enter++ so no submit is triggered. Args: driver: The webdriver count: The amount of line breaks to write \"\"\" for i in range ( 0 , count ): ActionChains ( driver ) . key_down ( Keys . SHIFT ) . key_down ( Keys . ENTER ) . key_up ( Keys . SHIFT ) . key_up ( Keys . ENTER ) . perform () wait_and_get_new_window ( driver , action , timeout = 10 , poll_frequency = 0.5 ) \u00b6 Executes the given function and waits for a new window to open and returns it handle. Parameters: Name Type Description Default driver WebDriver The webdriver required action Callable[[], NoneType] The function to execute before waiting for the window required timeout Union[float, int] The maximum time to wait 10 poll_frequency float The frequency to check for the presence of the new window 0.5 Returns: Type Description Optional[str] Optional[str]: [description] Source code in statemachines/core/selenium.py def wait_and_get_new_window ( driver : webdriver . Remote , action : Callable [[], None ], timeout : Union [ float , int ] = 10 , poll_frequency : float = POLL_FREQUENCY , ) -> Optional [ str ]: \"\"\"Executes the given function and waits for a new window to open and returns it handle. Args: driver: The webdriver action: The function to execute before waiting for the window timeout: The maximum time to wait poll_frequency: The frequency to check for the presence of the new window Returns: Optional[str]: [description] \"\"\" handles_before = driver . window_handles action () wait_for_window_change ( driver , handles_before , timeout , poll_frequency ) return get_new_window ( driver , handles_before ) wait_for_page_load ( driver , locator = ( 'tag name' , 'html' ), timeout = 120 ) \u00b6 Context manager for waiting on page reloads or requests caused by interaction. From https://www.cloudbees.com/blog/get-selenium-to-wait-for-page-load/ Parameters: Name Type Description Default timeout The maximum time to wait for the page to load 120 Source code in statemachines/core/selenium.py @contextmanager def wait_for_page_load ( driver : webdriver . Remote , locator : Tuple [ By , str ] = ( By . TAG_NAME , \"html\" ), timeout = TIMEOUT , ): \"\"\"Context manager for waiting on page reloads or requests caused by interaction. From https://www.cloudbees.com/blog/get-selenium-to-wait-for-page-load/ Args: timeout: The maximum time to wait for the page to load \"\"\" ( by , value ) = locator old_page = driver . find_element ( by , value ) yield WebDriverWait ( driver , timeout ) . until ( staleness_of ( old_page )) wait_for_window_change ( driver , handles_before , timeout = 10 , poll_frequency = 0.5 ) \u00b6 Wait for a new window to open and returns its window handle. Parameters: Name Type Description Default driver WebDriver The webdriver required handles_before List[str] The handles list before the new window opens required timeout Union[float, int] The maximum time to wait for 10 poll_frequency float The frequency the condition should be checked 0.5 Source code in statemachines/core/selenium.py def wait_for_window_change ( driver : webdriver . Remote , handles_before : List [ str ], timeout : Union [ float , int ] = 10 , poll_frequency : float = POLL_FREQUENCY , ): \"\"\"Wait for a new window to open and returns its window handle. Args: driver: The webdriver handles_before: The handles list before the new window opens timeout: The maximum time to wait for poll_frequency: The frequency the condition should be checked \"\"\" # wait for the window to appear WebDriverWait ( driver = driver , timeout = timeout , poll_frequency = poll_frequency , ) . until ( lambda driver : len ( handles_before ) != len ( driver . window_handles ))","title":"Selenium"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium","text":"This module contains configuration and utility functions for using Selenium webdrivers as part of simulations.","title":"cr_kyoushi.statemachines.core.selenium"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumConfig","text":"Configuration class for selenium drivers","title":"SeleniumConfig"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumConfig.accept_insecure_ssl","text":"If the browser should accept insecure SSL connections or not.","title":"accept_insecure_ssl"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumConfig.arguments","text":"Additional commandline arguments for the webdriver","title":"arguments"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumConfig.capabilities","text":"List of desired capabilities","title":"capabilities"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumConfig.download","text":"The file download configuration for the webdriver","title":"download"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumConfig.driver_manager","text":"Configuration for the webdriver manager used to download and install webdrivers.","title":"driver_manager"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumConfig.headless","text":"If the browser should be run in headless mode or not.","title":"headless"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumConfig.implicit_wait","text":"The implicit time the selenium driver waits when looking up an element","title":"implicit_wait"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumConfig.int","text":"The windows height in pixels","title":"int"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumConfig.proxy","text":"The proxy configuration to use for the webdriver","title":"proxy"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumConfig.type","text":"The webdriver type to use.","title":"type"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumConfig.window_height","text":"The windows height in pixels","title":"window_height"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumConfig.window_width","text":"The windows width in pixels","title":"window_width"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumConfig.window_x_position","text":"The windows x-axis position in pixels","title":"window_x_position"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumConfig.window_y_position","text":"The windows y-axis position in pixels","title":"window_y_position"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumContext","text":"Context model for selenium state machines","title":"SeleniumContext"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumContextModel","text":"Context model for selenium state machines","title":"SeleniumContextModel"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumContextModel.main_window","text":"The main window of the webdriver","title":"main_window"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumDownloadConfig","text":"Configuration class for the selenium drivers download settings","title":"SeleniumDownloadConfig"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumDownloadConfig.autosave","text":"List of mime type to autosave (required for firefox prompt=False)","title":"autosave"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumDownloadConfig.path","text":"The download directory to use","title":"path"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumDownloadConfig.prompt","text":"If the download dialog should be shown or not","title":"prompt"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumProxyConfig","text":"Selenium webdriver proxy configuration","title":"SeleniumProxyConfig"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumProxyConfig.enabled","text":"If a proxy should be used or not","title":"enabled"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumProxyConfig.host","text":"The proxy host","title":"host"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumProxyConfig.password","text":"The socks password to use for authentication","title":"password"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumProxyConfig.port","text":"The proxy port","title":"port"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumProxyConfig.socks","text":"If a socks proxy should be used instead of a HTTP proxy","title":"socks"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumProxyConfig.socks_version","text":"The SOCKS protocol version to use","title":"socks_version"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumProxyConfig.username","text":"The socks username to use for authentication","title":"username"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumStatemachine","text":"Generic selenium state machine class","title":"SeleniumStatemachine"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumStatemachine.destroy_context","text":"Destroy and clean up the state machine execution context Note Override or extend this function if your state machine needs run some logic or free Context information after it has finished executing. Source code in statemachines/core/selenium.py def destroy_context ( self ): if self . context is not None : self . context . driver . quit ()","title":"destroy_context()"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumStatemachine.setup_context","text":"Initialize and setup the state machine execution context Note Override this function if your state machine needs run some logic or set Context information before it can be executed. Source code in statemachines/core/selenium.py def setup_context ( self ): raise NotImplementedError ()","title":"setup_context()"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumStatemachineConfig","text":"Web browser state machine configuration model Examples: max_errors : 0 start_time : 2021-01-23T9:00 end_time : 2021-01-29T00:01 schedule : work_days : monday : start_time : 09:00 end_time : 17:30 friday : start_time : 11:21 end_time : 19:43 selenium : driver_manager : cache_valid_range : 5 # days type : firefox window_width : 800 window_height : 600 accept_insecure_ssl : yes","title":"SeleniumStatemachineConfig"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.SeleniumStatemachineConfig.selenium","text":"Selenium configuration for the web browser user","title":"selenium"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.Statemachine","text":"Basic selenium state machine class with a selenium context","title":"Statemachine"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.Statemachine.setup_context","text":"Initialize and setup the state machine execution context Note Override this function if your state machine needs run some logic or set Context information before it can be executed. Source code in statemachines/core/selenium.py def setup_context ( self ): driver = self . get_driver () self . context = SeleniumContextModel ( driver = driver , main_window = driver . current_window_handle , fake = self . fake , )","title":"setup_context()"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.WaitForScrollFinish","text":"Utility class that can be used to wait for a vertical scroll to finish. Can also be used as context manager to encapsulate a code block with the wait directive. Meaning the y_pos is saved at the start of the block and the check is started once the indented block has finished. Examples: ```python with WaitForScrollFinish(driver): # y post is magically saved here driver.find_element_by_id('some-input').send_keys('input') driver.find_element_by_id('some-button').click() # scroll checks and waits magically begin here ```","title":"WaitForScrollFinish"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.WaitForScrollFinish.__init__","text":"Parameters: Name Type Description Default driver WebDriver The webdriver instance required y_pos int The initial y position to use. Used when you want to manually call the wait functions. 0 timeout int The maximum amount of time to wait for the scroll to finish. 120 Source code in statemachines/core/selenium.py def __init__ ( self , driver : webdriver . Remote , y_pos : int = 0 , timeout : int = TIMEOUT , ): \"\"\" Args: driver: The webdriver instance y_pos: The initial y position to use. Used when you want to manually call the wait functions. timeout: The maximum amount of time to wait for the scroll to finish. \"\"\" self . driver : webdriver . Remote = driver self . timeout : int = timeout self . y_pos_org : int = y_pos","title":"__init__()"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.WebdriverManagerConfig","text":"Configuration class for the selenium webdriver manager","title":"WebdriverManagerConfig"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.WebdriverManagerConfig.cache_valid_range","text":"The validity of the driver cache in days.","title":"cache_valid_range"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.WebdriverManagerConfig.latest_release_url","text":"The URL for the latest version of the webdriver","title":"latest_release_url"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.WebdriverManagerConfig.log_level","text":"Log level for the webdriver manager.","title":"log_level"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.WebdriverManagerConfig.path","text":"The webdriver cache path","title":"path"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.WebdriverManagerConfig.url","text":"The base URL to download the webdriver from. (e.g., https://chromedriver.storage.googleapis.com )","title":"url"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.WebdriverType","text":"Enum for the different Selenium webdriver types","title":"WebdriverType"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.driver_wait","text":"Wrapper function for WebDriverWait until with a custom timeout value Parameters: Name Type Description Default driver WebDriver The webdriver instance required check_func Callable[[selenium.webdriver.remote.webdriver.WebDriver], Optional[Any]] The poll check function required timeout Union[float, int] The maximum time to wait. 120 poll_frequency float The poll frequency. 0.5 ignored_exceptions Tuple[Exception, ...] The exceptions to ignore and not count as errors. None Source code in statemachines/core/selenium.py def driver_wait ( driver : webdriver . Remote , check_func : Callable [[ webdriver . Remote ], Optional [ Any ]], timeout : Union [ float , int ] = TIMEOUT , poll_frequency : float = POLL_FREQUENCY , ignored_exceptions : Tuple [ Exception , ... ] = None , ): \"\"\"Wrapper function for WebDriverWait until with a custom timeout value Args: driver: The webdriver instance check_func: The poll check function timeout: The maximum time to wait. poll_frequency: The poll frequency. ignored_exceptions: The exceptions to ignore and not count as errors. \"\"\" WebDriverWait ( driver , timeout , poll_frequency , ignored_exceptions ) . until ( check_func )","title":"driver_wait()"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.element_in_viewport","text":"Checks wether an element is not only visible but is also in the current viewport. See https://stackoverflow.com/a/46816183 Parameters: Name Type Description Default driver WebDriver The webdriver required elem WebElement The element to check required Returns: Type Description bool True if the element is in the viewport False otherwise. Source code in statemachines/core/selenium.py def element_in_viewport ( driver : webdriver . Remote , elem : WebElement ) -> bool : \"\"\"Checks wether an element is not only visible but is also in the current viewport. See https://stackoverflow.com/a/46816183 Args: driver: The webdriver elem: The element to check Returns: `True` if the element is in the viewport `False` otherwise. \"\"\" elem_left_bound = elem . location . get ( \"x\" ) elem_top_bound = elem . location . get ( \"y\" ) elem_width = elem . size . get ( \"width\" ) elem_height = elem . size . get ( \"height\" ) elem_right_bound = elem_left_bound + elem_width elem_lower_bound = elem_top_bound + elem_height win_upper_bound = driver . execute_script ( \"return window.pageYOffset\" ) win_left_bound = driver . execute_script ( \"return window.pageXOffset\" ) win_width = driver . execute_script ( \"return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\" ) win_height = driver . execute_script ( \"return window.innerHeight || document.documentElement.clientHeight|| document.body.clientHeight;\" ) win_right_bound = win_left_bound + win_width win_lower_bound = win_upper_bound + win_height return all ( ( win_left_bound <= elem_left_bound , win_right_bound >= elem_right_bound , win_upper_bound <= elem_top_bound , win_lower_bound >= elem_lower_bound , ) )","title":"element_in_viewport()"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.get_new_window","text":"Get the new window based on the current and previous window list. Parameters: Name Type Description Default driver WebDriver The webdriver required handles_before List[str] The window list before the new window opened required Returns: Type Description Optional[str] The window handle for the new window Source code in statemachines/core/selenium.py def get_new_window ( driver : webdriver . Remote , handles_before : List [ str ], ) -> Optional [ str ]: \"\"\"Get the new window based on the current and previous window list. Args: driver: The webdriver handles_before: The window list before the new window opened Returns: The window handle for the new window \"\"\" # get new window and return handle_after = driver . window_handles if len ( handle_after ) > len ( handles_before ): return set ( handle_after ) . difference ( set ( handles_before )) . pop () return None","title":"get_new_window()"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.get_webdriver","text":"Gets and configures a Selenium webdriver instance based on the given configuration. Parameters: Name Type Description Default config SeleniumConfig The selenium configuration required Returns: Type Description WebDriver The initialized and configured Selenium webdriver instance Source code in statemachines/core/selenium.py def get_webdriver ( config : SeleniumConfig , driver_path : Optional [ str ] = None , ) -> webdriver . Remote : \"\"\"Gets and configures a Selenium webdriver instance based on the given configuration. Args: config: The selenium configuration Returns: The initialized and configured Selenium webdriver instance \"\"\" driver_info = _MANAGER_MAP [ config . type ] fox_profile = None # install webdriver and get path if not already given if driver_path is None : driver_path = install_webdriver ( config ) options = driver_info [ \"driver_options\" ] # configure webdriver capabilities for cap , cap_val in config . capabilities . items (): options . set_capability ( cap , cap_val ) # configure webdriver arguments for arg in config . arguments : options . add_argument ( arg ) if config . type != WebdriverType . EDGE and config . type != WebdriverType . IE : # configure headless mode via driver options options . set_headless ( config . headless ) # configure SSL cert insecure option options . set_capability ( \"acceptInsecureCerts\" , config . accept_insecure_ssl ) # configure proxy if config . proxy . enabled : proxy_url = f \" { config . proxy . host } : { str ( config . proxy . port ) } \" proxy = Proxy () proxy . proxy_type = ProxyType . MANUAL proxy . autodetect = False proxy . ftp_proxy = proxy_url if config . proxy . socks : proxy . socks_proxy = proxy_url # auth settings if config . proxy . username is not None and config . proxy . password is not None : proxy . socks_username = config . proxy . username proxy . socks_password = config . proxy . password else : proxy . http_proxy = proxy_url proxy . ssl_proxy = proxy_url # options: webdriver.ChromeOptions # apply proxy settings proxy . add_to_capabilities ( options . capabilities ) if config . proxy . socks : # need to manually set the socksVersion since # the proxy config object does not expose the setting options . capabilities [ \"proxy\" ][ \"socksVersion\" ] = config . proxy . socks_version download_path = ( # set download path if we have one str ( config . download . path . absolute ()) # otherwise set empty string if config . download . path is not None else \"\" ) if not config . download . prompt : # create download directory os . makedirs ( download_path , exist_ok = True ) if config . type == WebdriverType . CHROME or config . type == WebdriverType . CHROMIUM : download_options = webdriver . ChromeOptions () download_options options . experimental_options . setdefault ( \"prefs\" , {}) . update ( { \"download.default_directory\" : download_path , \"download.prompt_for_download\" : False , \"download.directory_upgrade\" : True , \"download.download_restrictions\" : 0 , \"safebrowsing_for_trusted_sources_enabled\" : False , \"safebrowsing.enabled\" : False , } ) elif config . type == WebdriverType . FIREFOX : fox_profile = webdriver . FirefoxProfile () fox_profile . set_preference ( \"browser.download.folderList\" , 2 ) # custom location fox_profile . set_preference ( \"browser.download.manager.showWhenStarting\" , False ) fox_profile . set_preference ( \"browser.download.dir\" , download_path ) fox_profile . set_preference ( \"browser.download.manager.alertOnEXEOpen\" , False ) fox_profile . set_preference ( \"browser.download.manager.closeWhenDone\" , False ) fox_profile . set_preference ( \"browser.download.manager.focusWhenStarting\" , False ) # application/octet-stream,application/vnd.ms-excel fox_profile . set_preference ( \"browser.helperApps.neverAsk.saveToDisk\" , \",\" . join ( config . download . autosave ), ) # need to disable pdf viewer as well fox_profile . set_preference ( \"pdfjs.disabled\" , True ) # common arguments args = { \"executable_path\" : driver_path , \"options\" : options , } if fox_profile is not None : args [ \"firefox_profile\" ] = fox_profile # create driver driver = driver_info [ \"driver\" ]( ** args ) # for chrome we need to enable auto download # after start if not config . download . prompt and ( config . type == WebdriverType . CHROME or config . type == WebdriverType . CHROMIUM ): chrome_enable_download_headless ( driver , download_path ) # configure driver implicit wait time driver . implicitly_wait ( config . implicit_wait ) # configure browser display size and position driver . set_window_size ( width = config . window_width , height = config . window_height ) driver . set_window_position ( x = config . window_x_position , y = config . window_y_position ) return driver","title":"get_webdriver()"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.get_webdriver_manager","text":"Gets and configures a webdriver manager instance for the given selenium config. Parameters: Name Type Description Default config SeleniumConfig The selenium config required Returns: Type Description DriverManager Configured DriverManager instance Source code in statemachines/core/selenium.py def get_webdriver_manager ( config : SeleniumConfig ) -> DriverManager : \"\"\"Gets and configures a webdriver manager instance for the given selenium config. Args: config: The selenium config Returns: Configured `DriverManager` instance \"\"\" manager_info = _MANAGER_MAP [ config . type ] manager_options = dict ( manager_info [ \"manager_options\" ]) manager_options . update ( filter_none_keys ( config . driver_manager . dict ())) # convert log level to int manager_options [ \"log_level\" ] = int ( manager_options [ \"log_level\" ]) return manager_info [ \"manager\" ]( ** manager_options )","title":"get_webdriver_manager()"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.install_webdriver","text":"Installs the configured Selenium driver and returns the install path. Parameters: Name Type Description Default config SeleniumConfig The Selenium configuration determining which driver gets installed and how. required Returns: Type Description str Path to the installed driver binary. Source code in statemachines/core/selenium.py def install_webdriver ( config : SeleniumConfig ) -> str : \"\"\"Installs the configured Selenium driver and returns the install path. Args: config: The Selenium configuration determining which driver gets installed and how. Returns: Path to the installed driver binary. \"\"\" manager = get_webdriver_manager ( config ) return manager . install ()","title":"install_webdriver()"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.js_set_text","text":"Set the text value of an input element directly with Javascript. This can be useful for avoiding onChange event listeners evaluating partial texts. Parameters: Name Type Description Default driver WebDriver The webdriver required element WebElement The input element to set the text for required text str The text to set required Source code in statemachines/core/selenium.py def js_set_text ( driver : webdriver . Remote , element : WebElement , text : str ): \"\"\"Set the text value of an input element directly with Javascript. This can be useful for avoiding onChange event listeners evaluating partial texts. Args: driver: The webdriver element: The input element to set the text for text: The text to set \"\"\" driver . execute_script ( f \"arguments[0].value = ' { text } '\" , element , )","title":"js_set_text()"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.slow_type","text":"Send a text to an element one character at a time with a delay. Parameters: Name Type Description Default element WebElement The element to send the text to required text str The text to send required delay Union[float, cr_kyoushi.simulation.model.ApproximateFloat] The delay to use in between key strokes. Average typing speed is 180-200 characters per minute or 3~ per second. The default was set with this in mind. ApproximateFloat(min=0.05, max=0.35) Source code in statemachines/core/selenium.py def slow_type ( element : WebElement , text : str , delay : Union [ float , ApproximateFloat ] = ApproximateFloat ( min = 0.05 , max = 0.35 , ), ): \"\"\"Send a text to an element one character at a time with a delay. Args: element: The element to send the text to text: The text to send delay: The delay to use in between key strokes. Average typing speed is 180-200 characters per minute or 3~ per second. The default was set with this in mind. \"\"\" # convert to approximate float if we got a float if not isinstance ( delay , ApproximateFloat ): delay = ApproximateFloat . convert ( delay ) # type the text for character in text : element . send_keys ( character ) time . sleep ( delay . value )","title":"slow_type()"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.type_linebreak","text":"Sends a linebreak to the currently focused input element (e.g., textarea). This is done using Shift + Enter so no submit is triggered. Parameters: Name Type Description Default driver WebDriver The webdriver required count The amount of line breaks to write 1 Source code in statemachines/core/selenium.py def type_linebreak ( driver : webdriver . Remote , count = 1 ): \"\"\"Sends a linebreak to the currently focused input element (e.g., textarea). This is done using ++shift+enter++ so no submit is triggered. Args: driver: The webdriver count: The amount of line breaks to write \"\"\" for i in range ( 0 , count ): ActionChains ( driver ) . key_down ( Keys . SHIFT ) . key_down ( Keys . ENTER ) . key_up ( Keys . SHIFT ) . key_up ( Keys . ENTER ) . perform ()","title":"type_linebreak()"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.wait_and_get_new_window","text":"Executes the given function and waits for a new window to open and returns it handle. Parameters: Name Type Description Default driver WebDriver The webdriver required action Callable[[], NoneType] The function to execute before waiting for the window required timeout Union[float, int] The maximum time to wait 10 poll_frequency float The frequency to check for the presence of the new window 0.5 Returns: Type Description Optional[str] Optional[str]: [description] Source code in statemachines/core/selenium.py def wait_and_get_new_window ( driver : webdriver . Remote , action : Callable [[], None ], timeout : Union [ float , int ] = 10 , poll_frequency : float = POLL_FREQUENCY , ) -> Optional [ str ]: \"\"\"Executes the given function and waits for a new window to open and returns it handle. Args: driver: The webdriver action: The function to execute before waiting for the window timeout: The maximum time to wait poll_frequency: The frequency to check for the presence of the new window Returns: Optional[str]: [description] \"\"\" handles_before = driver . window_handles action () wait_for_window_change ( driver , handles_before , timeout , poll_frequency ) return get_new_window ( driver , handles_before )","title":"wait_and_get_new_window()"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.wait_for_page_load","text":"Context manager for waiting on page reloads or requests caused by interaction. From https://www.cloudbees.com/blog/get-selenium-to-wait-for-page-load/ Parameters: Name Type Description Default timeout The maximum time to wait for the page to load 120 Source code in statemachines/core/selenium.py @contextmanager def wait_for_page_load ( driver : webdriver . Remote , locator : Tuple [ By , str ] = ( By . TAG_NAME , \"html\" ), timeout = TIMEOUT , ): \"\"\"Context manager for waiting on page reloads or requests caused by interaction. From https://www.cloudbees.com/blog/get-selenium-to-wait-for-page-load/ Args: timeout: The maximum time to wait for the page to load \"\"\" ( by , value ) = locator old_page = driver . find_element ( by , value ) yield WebDriverWait ( driver , timeout ) . until ( staleness_of ( old_page ))","title":"wait_for_page_load()"},{"location":"reference/core/selenium/#cr_kyoushi.statemachines.core.selenium.wait_for_window_change","text":"Wait for a new window to open and returns its window handle. Parameters: Name Type Description Default driver WebDriver The webdriver required handles_before List[str] The handles list before the new window opens required timeout Union[float, int] The maximum time to wait for 10 poll_frequency float The frequency the condition should be checked 0.5 Source code in statemachines/core/selenium.py def wait_for_window_change ( driver : webdriver . Remote , handles_before : List [ str ], timeout : Union [ float , int ] = 10 , poll_frequency : float = POLL_FREQUENCY , ): \"\"\"Wait for a new window to open and returns its window handle. Args: driver: The webdriver handles_before: The handles list before the new window opens timeout: The maximum time to wait for poll_frequency: The frequency the condition should be checked \"\"\" # wait for the window to appear WebDriverWait ( driver = driver , timeout = timeout , poll_frequency = poll_frequency , ) . until ( lambda driver : len ( handles_before ) != len ( driver . window_handles ))","title":"wait_for_window_change()"},{"location":"reference/core/util/","text":"\u00b6 This module contains various utility functions. check_probabilities ( values ) \u00b6 Validates the sum of all probabilities results in a clean probability distribution. i.e., The sum of all probabilities is 100% (i.e., 1.0) Parameters: Name Type Description Default values Dict[str, float] Dictionary containing all fields required Exceptions: Type Description ValueError If the distribution does not sum to 1 Source code in statemachines/core/util.py def check_probabilities ( values : Dict [ str , float ]) -> Dict [ str , float ]: \"\"\"Validates the sum of all probabilities results in a clean probability distribution. i.e., The sum of all probabilities is 100% (i.e., 1.0) Args: values: Dictionary containing all fields Raises: ValueError: If the distribution does not sum to 1 \"\"\" fields = [ val for key , val in values . items ()] prob_sum = sum ( fields , 0.0 ) if abs ( 1 - prob_sum ) <= 1e-8 : return values raise ValueError ( ( \"Sum of all transition probabilities must be 1.0, \" f \"but is { prob_sum } \" ) ) filter_none_keys ( container ) \u00b6 Removes all keys pointing to None values from a dict Parameters: Name Type Description Default container Dict[~_FILTER_KEY, ~_FILTER_VAL] The dict to filter required Returns: Type Description Dict[~_FILTER_KEY, ~_FILTER_VAL] The original dict without its None values. Source code in statemachines/core/util.py def filter_none_keys ( container : Dict [ _FILTER_KEY , _FILTER_VAL ] ) -> Dict [ _FILTER_KEY , _FILTER_VAL ]: \"\"\"Removes all keys pointing to `None` values from a `dict` Args: container: The dict to filter Returns: The original dict without its `None` values. \"\"\" return { k : v for k , v in container . items () if v is not None } greater_equal_one ( v ) \u00b6 Validates the given number v is v>=1 Source code in statemachines/core/util.py def greater_equal_one ( v : float ) -> float : \"\"\"Validates the given number v is v>=1\"\"\" if v < 1 : raise ValueError ( \"must be >= 1!\" ) return v positive_smaller_one ( v ) \u00b6 Validates the given number v is 0 <= v <= 1. Source code in statemachines/core/util.py def positive_smaller_one ( v : float ) -> float : \"\"\"Validates the given number v is 0 <= v <= 1.\"\"\" if v > 1 or v < 0 : raise ValueError ( \"must be 0 <= f <= 1!\" ) return v","title":"Util"},{"location":"reference/core/util/#cr_kyoushi.statemachines.core.util","text":"This module contains various utility functions.","title":"cr_kyoushi.statemachines.core.util"},{"location":"reference/core/util/#cr_kyoushi.statemachines.core.util.check_probabilities","text":"Validates the sum of all probabilities results in a clean probability distribution. i.e., The sum of all probabilities is 100% (i.e., 1.0) Parameters: Name Type Description Default values Dict[str, float] Dictionary containing all fields required Exceptions: Type Description ValueError If the distribution does not sum to 1 Source code in statemachines/core/util.py def check_probabilities ( values : Dict [ str , float ]) -> Dict [ str , float ]: \"\"\"Validates the sum of all probabilities results in a clean probability distribution. i.e., The sum of all probabilities is 100% (i.e., 1.0) Args: values: Dictionary containing all fields Raises: ValueError: If the distribution does not sum to 1 \"\"\" fields = [ val for key , val in values . items ()] prob_sum = sum ( fields , 0.0 ) if abs ( 1 - prob_sum ) <= 1e-8 : return values raise ValueError ( ( \"Sum of all transition probabilities must be 1.0, \" f \"but is { prob_sum } \" ) )","title":"check_probabilities()"},{"location":"reference/core/util/#cr_kyoushi.statemachines.core.util.filter_none_keys","text":"Removes all keys pointing to None values from a dict Parameters: Name Type Description Default container Dict[~_FILTER_KEY, ~_FILTER_VAL] The dict to filter required Returns: Type Description Dict[~_FILTER_KEY, ~_FILTER_VAL] The original dict without its None values. Source code in statemachines/core/util.py def filter_none_keys ( container : Dict [ _FILTER_KEY , _FILTER_VAL ] ) -> Dict [ _FILTER_KEY , _FILTER_VAL ]: \"\"\"Removes all keys pointing to `None` values from a `dict` Args: container: The dict to filter Returns: The original dict without its `None` values. \"\"\" return { k : v for k , v in container . items () if v is not None }","title":"filter_none_keys()"},{"location":"reference/core/util/#cr_kyoushi.statemachines.core.util.greater_equal_one","text":"Validates the given number v is v>=1 Source code in statemachines/core/util.py def greater_equal_one ( v : float ) -> float : \"\"\"Validates the given number v is v>=1\"\"\" if v < 1 : raise ValueError ( \"must be >= 1!\" ) return v","title":"greater_equal_one()"},{"location":"reference/core/util/#cr_kyoushi.statemachines.core.util.positive_smaller_one","text":"Validates the given number v is 0 <= v <= 1. Source code in statemachines/core/util.py def positive_smaller_one ( v : float ) -> float : \"\"\"Validates the given number v is 0 <= v <= 1.\"\"\" if v > 1 or v < 0 : raise ValueError ( \"must be 0 <= f <= 1!\" ) return v","title":"positive_smaller_one()"},{"location":"statemachines/web_browser/","text":"Web Browser ( ait.web_browser ) \u00b6 The Web Browser state machine simulates a person browsing the internet. It connects to random websites and browses links on it using Selenium. Web Browser state machine Configuration \u00b6 cr_kyoushi.statemachines.web_browser.config.StatemachineConfig pydantic-model \u00b6 Web browser state machine configuration model Examples: max_errors : 0 start_time : 2021-01-23T9:00 end_time : 2021-01-29T00:01 schedule : work_days : monday : start_time : 09:00 end_time : 17:30 friday : start_time : 11:21 end_time : 19:43 selenium : driver_manager : cache_valid_range : 5 # days type : firefox window_width : 800 window_height : 600 accept_insecure_ssl : yes user : max_daily : 5 max_depth : 2 wait_time : min : 3.5 # seconds max : 10 # seconds idle_time : min : 300 # 60*5 = 5m max : 10800 # 60*60*3 = 3h websites : - http://ait.ac.at - https://orf.at - http://google.at states : selecting_activity : visit_website : 0.7 idle : 0.3 on_website : visit_link : 0.7 leave_website : 0.3 leaving_website : background : 0.5 close : 0.5 states: StatesConfig pydantic-field \u00b6 The state transitions probability configuration user: UserConfig pydantic-field \u00b6 The web browser user configuration cr_kyoushi.statemachines.web_browser.config.UserConfig pydantic-model \u00b6 Web browser state machine user behavior configuration max_daily: int pydantic-field \u00b6 The maximum websites to visit per day max_depth: int pydantic-field \u00b6 The maximum link depth the user will browse to on a website websites: AnyUrl pydantic-field \u00b6 The web site URLs the user can visit cr_kyoushi.statemachines.web_browser.config.StatesConfig pydantic-model \u00b6 State transition configuration for the web browser state machine selecting_activity: ActivitySelectionStateConfig pydantic-field \u00b6 The transition probabilities configuration for the selecting_activity state cr_kyoushi.statemachines.web_browser.config.ActivitySelectionStateConfig pydantic-model \u00b6 Transition probabilities configuration for the selecting_activity state idle: float pydantic-field \u00b6 The probability that the user will idle next visit_website: float pydantic-field \u00b6 The probability that the user will visit a website next cr_kyoushi.statemachines.web_browser.config.WebsiteStateConfig pydantic-model \u00b6 Transition probabilities configuration for the on_website state leave_website: float pydantic-field \u00b6 The probability that the user will leave the website visit_link: float pydantic-field \u00b6 The probability that the user will click a link cr_kyoushi.statemachines.web_browser.config.LeaveWebsiteStateConfig pydantic-model \u00b6 Transition probabilities configuration for the leaving_website state background: float pydantic-field \u00b6 The probability that the user will just leave the website open in the background close: float pydantic-field \u00b6 The probability that the user will close the website","title":"Web Browser"},{"location":"statemachines/web_browser/#web-browser-aitweb_browser","text":"The Web Browser state machine simulates a person browsing the internet. It connects to random websites and browses links on it using Selenium. Web Browser state machine","title":"Web Browser (ait.web_browser)"},{"location":"statemachines/web_browser/#configuration","text":"","title":"Configuration"},{"location":"statemachines/web_browser/#cr_kyoushi.statemachines.web_browser.config.StatemachineConfig","text":"Web browser state machine configuration model Examples: max_errors : 0 start_time : 2021-01-23T9:00 end_time : 2021-01-29T00:01 schedule : work_days : monday : start_time : 09:00 end_time : 17:30 friday : start_time : 11:21 end_time : 19:43 selenium : driver_manager : cache_valid_range : 5 # days type : firefox window_width : 800 window_height : 600 accept_insecure_ssl : yes user : max_daily : 5 max_depth : 2 wait_time : min : 3.5 # seconds max : 10 # seconds idle_time : min : 300 # 60*5 = 5m max : 10800 # 60*60*3 = 3h websites : - http://ait.ac.at - https://orf.at - http://google.at states : selecting_activity : visit_website : 0.7 idle : 0.3 on_website : visit_link : 0.7 leave_website : 0.3 leaving_website : background : 0.5 close : 0.5","title":"StatemachineConfig"},{"location":"statemachines/web_browser/#cr_kyoushi.statemachines.web_browser.config.UserConfig","text":"Web browser state machine user behavior configuration","title":"UserConfig"},{"location":"statemachines/web_browser/#cr_kyoushi.statemachines.web_browser.config.StatesConfig","text":"State transition configuration for the web browser state machine","title":"StatesConfig"},{"location":"statemachines/horde_user/actions/","text":"The horde user selenium actions i.e., things that actively do something LoginToHorde \u00b6 Login to horde action. It is possible to configure both the username and password. Note You can also create a login function that uses a wrong password and thus fails to login by setting fail to True . SendMail \u00b6 Send mail action writes and sends an email. It is possible to configure the available contacts, attachments and their likelyhood to be selected. Maximum amount of recipients and propability of adding more than one recipient or an attachments can also be configured. SetPersonalPreferences \u00b6 Set personal preferences action sets the users full name perferenc. The fullname can be configured. __goto_new_contact_tab ( driver , name , section_id ) \u00b6 Helper function for switching between the contact edit dialog tabs. add_user_group ( log , current_state , context , target ) \u00b6 Add user group action adds a new user group. admin_check_versions ( log , current_state , context , target ) \u00b6 Admin check versions action clicks the check versions button on the admin config page. admin_exec_cli ( log , current_state , context , target ) \u00b6 Admin exec cli action writes random cli commands and executes them. admin_exec_php ( log , current_state , context , target ) \u00b6 Admin exec php action writes a \"random\" php script and executes it. admin_exec_sql ( log , current_state , context , target ) \u00b6 Admin exec sql action writes a \"random\" sql select and executes it. confirm_delete_contact ( log , current_state , context , target ) \u00b6 Confirm delete contact action clicks the confirm delte button. confirm_delete_user_group ( log , current_state , context , target ) \u00b6 Confirm delete user group action finishes the group deletion dialog delete_calendar_event ( log , current_state , context , target ) \u00b6 Delete calendar event action deletes the event currently being edited. delete_contact ( log , current_state , context , target ) \u00b6 Delete contact action deltes the currently viewed contact. delete_mail ( log , current_state , context , target ) \u00b6 Delete mail action deletes the selected email. delete_note ( log , current_state , context , target ) \u00b6 Delete note action deletes the note currently open for editing. delete_task ( log , current_state , context , target ) \u00b6 Delete task action deltes the task that is currently being edited. delete_user_group ( log , current_state , context , target ) \u00b6 Delete user group action deletes a random user group. edit_calendar_event ( log , current_state , context , target ) \u00b6 Edit calendar event action opens the edit dialog for a random visible event. edit_note ( log , current_state , context , target ) \u00b6 Edit note action opens a random note for editting. edit_task ( log , current_state , context , target ) \u00b6 Edit task action opens the task editor for a random task. logout_of_horde ( log , current_state , context , target ) \u00b6 Logout of horde action clicks the logout button available on all horde sub pages. new_calendar_event ( log , current_state , context , target ) \u00b6 New calendar event action starts the event creation dialog new_mail ( log , current_state , context , target ) \u00b6 New mail action starts the mail composition dialog window new_note ( log , current_state , context , target ) \u00b6 New note action opens the note composition dialog for creating a new note. new_task ( log , current_state , context , target ) \u00b6 New task action starts the task creation dialog. open_mail ( log , current_state , context , target ) \u00b6 Open mail action opens the email in an extra window refresh_mail ( log , current_state , context , target ) \u00b6 Refresh mail action clicks the refresh button and causing new mails to be loaded. reply_mail ( log , current_state , context , target ) \u00b6 Reply mail action opens the mail compose dialog to reply to the selected email save_new_task ( log , current_state , context , target ) \u00b6 Save new task action creates and saves a new random task. start_add_contact ( log , current_state , context , target ) \u00b6 Add contact event opens the create contact dialog. submit_new_contact ( log , current_state , context , target ) \u00b6 Submit new contact action creates and saves a new random contact. view_mail ( log , current_state , context , target ) \u00b6 View mail action clicks on a email in the list showing it in the bottom area write_calendar_event ( log , current_state , context , target ) \u00b6 Write calendar event action creates a new event on a random day in the current month. write_note ( log , current_state , context , target ) \u00b6 Write note action creates or edits a note and saves it.","title":"Selenium Actions"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.LoginToHorde","text":"Login to horde action. It is possible to configure both the username and password. Note You can also create a login function that uses a wrong password and thus fails to login by setting fail to True .","title":"LoginToHorde"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.SendMail","text":"Send mail action writes and sends an email. It is possible to configure the available contacts, attachments and their likelyhood to be selected. Maximum amount of recipients and propability of adding more than one recipient or an attachments can also be configured.","title":"SendMail"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.SetPersonalPreferences","text":"Set personal preferences action sets the users full name perferenc. The fullname can be configured.","title":"SetPersonalPreferences"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.__goto_new_contact_tab","text":"Helper function for switching between the contact edit dialog tabs.","title":"__goto_new_contact_tab()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.add_user_group","text":"Add user group action adds a new user group.","title":"add_user_group()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.admin_check_versions","text":"Admin check versions action clicks the check versions button on the admin config page.","title":"admin_check_versions()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.admin_exec_cli","text":"Admin exec cli action writes random cli commands and executes them.","title":"admin_exec_cli()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.admin_exec_php","text":"Admin exec php action writes a \"random\" php script and executes it.","title":"admin_exec_php()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.admin_exec_sql","text":"Admin exec sql action writes a \"random\" sql select and executes it.","title":"admin_exec_sql()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.confirm_delete_contact","text":"Confirm delete contact action clicks the confirm delte button.","title":"confirm_delete_contact()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.confirm_delete_user_group","text":"Confirm delete user group action finishes the group deletion dialog","title":"confirm_delete_user_group()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.delete_calendar_event","text":"Delete calendar event action deletes the event currently being edited.","title":"delete_calendar_event()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.delete_contact","text":"Delete contact action deltes the currently viewed contact.","title":"delete_contact()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.delete_mail","text":"Delete mail action deletes the selected email.","title":"delete_mail()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.delete_note","text":"Delete note action deletes the note currently open for editing.","title":"delete_note()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.delete_task","text":"Delete task action deltes the task that is currently being edited.","title":"delete_task()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.delete_user_group","text":"Delete user group action deletes a random user group.","title":"delete_user_group()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.edit_calendar_event","text":"Edit calendar event action opens the edit dialog for a random visible event.","title":"edit_calendar_event()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.edit_note","text":"Edit note action opens a random note for editting.","title":"edit_note()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.edit_task","text":"Edit task action opens the task editor for a random task.","title":"edit_task()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.logout_of_horde","text":"Logout of horde action clicks the logout button available on all horde sub pages.","title":"logout_of_horde()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.new_calendar_event","text":"New calendar event action starts the event creation dialog","title":"new_calendar_event()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.new_mail","text":"New mail action starts the mail composition dialog window","title":"new_mail()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.new_note","text":"New note action opens the note composition dialog for creating a new note.","title":"new_note()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.new_task","text":"New task action starts the task creation dialog.","title":"new_task()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.open_mail","text":"Open mail action opens the email in an extra window","title":"open_mail()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.refresh_mail","text":"Refresh mail action clicks the refresh button and causing new mails to be loaded.","title":"refresh_mail()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.reply_mail","text":"Reply mail action opens the mail compose dialog to reply to the selected email","title":"reply_mail()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.save_new_task","text":"Save new task action creates and saves a new random task.","title":"save_new_task()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.start_add_contact","text":"Add contact event opens the create contact dialog.","title":"start_add_contact()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.submit_new_contact","text":"Submit new contact action creates and saves a new random contact.","title":"submit_new_contact()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.view_mail","text":"View mail action clicks on a email in the list showing it in the bottom area","title":"view_mail()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.write_calendar_event","text":"Write calendar event action creates a new event on a random day in the current month.","title":"write_calendar_event()"},{"location":"statemachines/horde_user/actions/#cr_kyoushi.statemachines.horde_user.actions.write_note","text":"Write note action creates or edits a note and saves it.","title":"write_note()"},{"location":"statemachines/horde_user/activities/","text":"A collection of helper functions used to create the various sub activities of the Horde user activity. get_address_book_activity ( idle , page_config , browser_config , info_config , return_select , address_book_page = 'address_book_page' , contact_compose = 'contact_compose' , contacts_browser = 'contacts_browser' , contact_info = 'contact_info' , contact_delete_confirming = 'contact_delete_confirming' , nav_address_book = 'nav_address_book' , new_contact = 'new_contact' , submit_contact = 'submit_contact' , nav_contacts_browse = 'nav_contacts_browse' , do_nothing = 'do_nothing' , view_contact = 'view_contact' , delete_contact = 'delete_contact' , delete_contact_confirm = 'delete_contact_confirm' , name_prefix = None ) \u00b6 Creates the horde address book activity and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.statemachines.horde_user.states.AddressBookPage, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.statemachines.horde_user.states.ContactsBrowser, cr_kyoushi.statemachines.horde_user.states.ContactInfo, cr_kyoushi.simulation.states.SequentialState] The address book activity states and the its menu navigation transition. get_admin_activity ( idle , admin_config , groups_config , return_select , admin_page = 'admin_page' , admin_config_page = 'admin_config_page' , admin_groups_page = 'admin_groups_page' , admin_group_added = 'admin_group_added' , admin_group_deleting = 'admin_group_deleting' , admin_php_shell_page = 'admin_php_shell_page' , admin_sql_shell_page = 'admin_sql_shell_page' , admin_cli_shell_page = 'admin_cli_shell_page' , nav_admin = 'nav_admin' , nav_config = 'nav_config' , check_versions = 'check_versions' , nav_groups = 'nav_groups' , group_add = 'group_add' , group_delete = 'group_delete' , group_delete_confirm = 'group_delete_confirm' , nav_users = 'nav_users' , nav_sessions = 'nav_sessions' , nav_alarms = 'nav_alarms' , nav_locks = 'nav_locks' , nav_permissions = 'nav_permissions' , nav_php_shell = 'nav_php_shell' , exec_php = 'exec_php' , nav_sql_shell = 'nav_sql_shell' , exec_sql = 'exec_sql' , nav_cli_shell = 'nav_cli_shell' , exec_cli = 'exec_cli' , name_prefix = None ) \u00b6 Creates the horde admin configuration activity and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.statemachines.horde_user.states.AdminPage, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.statemachines.horde_user.states.AdminGroupsPage, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.simulation.states.SequentialState] The admin activity states and the its menu navigation transition. get_base_activity ( idle , horde , login_config , logout_config , root = 'selecting_activity' , selecting_menu = 'selecting_menu' , login_check = 'login_check' , login_page = 'login_page' , logout_choice = 'logout?' , horde_transition = 'go_to_horde' , login = 'login' , fail_login = 'fail_login' , pause_horde = 'pause_horde' , horde_logout = 'horde_logout' , return_select = 'return_select' , name_prefix = None ) \u00b6 Creates the horde base activity (i.e., login and logout) and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.statemachines.horde_user.states.LoggedInCheck, cr_kyoushi.statemachines.horde_user.states.LoginPage, cr_kyoushi.statemachines.horde_user.states.LogoutChoice] The horde open, pause and return to selection menu transition as well as the login and logout states. get_calendar_activity ( idle , page_config , edit_config , return_select , calendar_page = 'calendar_page' , event_compose = 'event_compose' , event_edit = 'event_edit' , nav_calendar = 'nav_calendar' , new_event = 'new_event' , write_event = 'write_event' , edit_event = 'edit_event' , delete_event = 'delete_event' , name_prefix = None ) \u00b6 Creates the horde calendar activity and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.statemachines.horde_user.states.CalendarPage, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.statemachines.horde_user.states.EventEdit] The calendar activity states and the its menu navigation transition. get_mail_activity ( idle , horde , page_config , view_config , info_config , return_select , mails_page = 'mails_page' , mail_view = 'mail_view' , mail_info = 'mail_info' , mail_compose = 'mail_compose' , nav_mail = 'nav_mail' , refresh_mail = 'refresh_mail' , new_mail = 'new_mail' , view_mail = 'view_mail' , do_nothing = 'do_nothing' , delete_mail = 'delete_mail' , open_mail = 'open_mail' , reply_mail = 'reply_mail' , send_mail = 'send_mail' , name_prefix = None ) \u00b6 Creates the horde mail activity and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.statemachines.horde_user.states.MailsPage, cr_kyoushi.statemachines.horde_user.states.MailView, cr_kyoushi.statemachines.horde_user.states.MailInfo, cr_kyoushi.simulation.states.SequentialState] The mail activity states and the mail menu navigation transition. get_menu_activity ( menu_config , nav_mail , nav_preferences , nav_admin , nav_notes , nav_tasks , nav_address_book , nav_calendar , pause_horde , selecting_menu = 'selecting_menu' , name_prefix = None ) \u00b6 Creates the horde main menu selection activity and its underlying state and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description SelectingMenu The menu selection state get_notes_activity ( idle , page_config , editor_config , return_select , notes_page = 'notes_page' , note_creator = 'note_creator' , note_editor = 'note_editor' , nav_notes = 'nav_notes' , new_note = 'new_note' , write_note = 'write_note' , edit_note = 'edit_note' , delete_note = 'delete_note' , name_prefix = None ) \u00b6 Creates the horde notes activity and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.statemachines.horde_user.states.NotesPage, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.statemachines.horde_user.states.NoteEditor] The notes activity states and the its menu navigation transition. get_preferences_activity ( idle , horde , preferences_page = 'preferences_page' , preferences_personal_page = 'preferences_personal_page' , selecting_menu = 'selecting_menu' , nav_preferences = 'nav_preferences' , nav_preferences_personal = 'nav_preferences_personal' , set_preferences_personal = 'set_preferences_personal' , name_prefix = None ) \u00b6 Creates the horde preference configuration activity and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.simulation.states.SequentialState] The preference activity states and the its menu navigation transition. get_tasks_activity ( idle , page_config , return_select , tasks_page = 'tasks_page' , task_creator = 'task_creator' , task_editor = 'task_editor' , nav_tasks = 'nav_tasks' , new_task = 'new_task' , save_task = 'save_task' , edit_task = 'edit_task' , delete_task = 'delete_task' , name_prefix = None ) \u00b6 Creates the horde tasks activity and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.statemachines.horde_user.states.TasksPage, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.simulation.states.SequentialState] The tasks activity states and the its menu navigation transition.","title":"Activities"},{"location":"statemachines/horde_user/activities/#cr_kyoushi.statemachines.horde_user.activities.get_address_book_activity","text":"Creates the horde address book activity and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.statemachines.horde_user.states.AddressBookPage, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.statemachines.horde_user.states.ContactsBrowser, cr_kyoushi.statemachines.horde_user.states.ContactInfo, cr_kyoushi.simulation.states.SequentialState] The address book activity states and the its menu navigation transition.","title":"get_address_book_activity()"},{"location":"statemachines/horde_user/activities/#cr_kyoushi.statemachines.horde_user.activities.get_admin_activity","text":"Creates the horde admin configuration activity and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.statemachines.horde_user.states.AdminPage, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.statemachines.horde_user.states.AdminGroupsPage, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.simulation.states.SequentialState] The admin activity states and the its menu navigation transition.","title":"get_admin_activity()"},{"location":"statemachines/horde_user/activities/#cr_kyoushi.statemachines.horde_user.activities.get_base_activity","text":"Creates the horde base activity (i.e., login and logout) and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.statemachines.horde_user.states.LoggedInCheck, cr_kyoushi.statemachines.horde_user.states.LoginPage, cr_kyoushi.statemachines.horde_user.states.LogoutChoice] The horde open, pause and return to selection menu transition as well as the login and logout states.","title":"get_base_activity()"},{"location":"statemachines/horde_user/activities/#cr_kyoushi.statemachines.horde_user.activities.get_calendar_activity","text":"Creates the horde calendar activity and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.statemachines.horde_user.states.CalendarPage, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.statemachines.horde_user.states.EventEdit] The calendar activity states and the its menu navigation transition.","title":"get_calendar_activity()"},{"location":"statemachines/horde_user/activities/#cr_kyoushi.statemachines.horde_user.activities.get_mail_activity","text":"Creates the horde mail activity and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.statemachines.horde_user.states.MailsPage, cr_kyoushi.statemachines.horde_user.states.MailView, cr_kyoushi.statemachines.horde_user.states.MailInfo, cr_kyoushi.simulation.states.SequentialState] The mail activity states and the mail menu navigation transition.","title":"get_mail_activity()"},{"location":"statemachines/horde_user/activities/#cr_kyoushi.statemachines.horde_user.activities.get_menu_activity","text":"Creates the horde main menu selection activity and its underlying state and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description SelectingMenu The menu selection state","title":"get_menu_activity()"},{"location":"statemachines/horde_user/activities/#cr_kyoushi.statemachines.horde_user.activities.get_notes_activity","text":"Creates the horde notes activity and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.statemachines.horde_user.states.NotesPage, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.statemachines.horde_user.states.NoteEditor] The notes activity states and the its menu navigation transition.","title":"get_notes_activity()"},{"location":"statemachines/horde_user/activities/#cr_kyoushi.statemachines.horde_user.activities.get_preferences_activity","text":"Creates the horde preference configuration activity and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.simulation.states.SequentialState] The preference activity states and the its menu navigation transition.","title":"get_preferences_activity()"},{"location":"statemachines/horde_user/activities/#cr_kyoushi.statemachines.horde_user.activities.get_tasks_activity","text":"Creates the horde tasks activity and its underlying states and transitions. It is possible to assign different names to the states and transitions via the function arguments. Returns: Type Description Tuple[cr_kyoushi.simulation.transitions.Transition, cr_kyoushi.statemachines.horde_user.states.TasksPage, cr_kyoushi.simulation.states.SequentialState, cr_kyoushi.simulation.states.SequentialState] The tasks activity states and the its menu navigation transition.","title":"get_tasks_activity()"},{"location":"statemachines/horde_user/nav/","text":"Horde activities selenium navigation operations i.e., actions that move between pages or views navigate_address_book_menu \u00b6 Navigate to the address book menu navigate_admin_alarms \u00b6 Navigate to the admin alarms settings menu navigate_admin_cli \u00b6 Navigate to the admin cli shell menu navigate_admin_configuration \u00b6 Navigate to the admin configuration settings menu navigate_admin_groups \u00b6 Navigate to the admin groups settings menu navigate_admin_locks \u00b6 Navigate to the admin locks settings menu navigate_admin_permissions \u00b6 Navigate to the admin permissions settings menu navigate_admin_php_shell \u00b6 Navigate to the admin php shell menu navigate_admin_sessions \u00b6 Navigate to the admin sessions settings menu navigate_admin_sql_shell \u00b6 Navigate to the admin sql shell menu navigate_admin_users \u00b6 Navigate to the admin user settings menu navigate_calendar_menu \u00b6 Navigate to the calendar menu navigate_mail_menu \u00b6 Navigate to the mails menu navigate_notes_menu \u00b6 Navigate to the notes menu navigate_preferences_global \u00b6 Navigate to the preferences menu navigate_tasks_menu \u00b6 Navigate to the tasks menu GoToHordeWebsite \u00b6 Go to horde action opens horde The url can be configured NavigateMainMenu \u00b6 Base class for navigation on the main menu NavigateSettingsMenu \u00b6 Base class for settings menu navigation navigate_address_book_browse ( log , current_state , context , target ) \u00b6 Navigate to the address book browse sub page navigate_address_book_contact ( log , current_state , context , target ) \u00b6 Navigate to the contact view for a random contact navigate_preferences_personal ( log , current_state , context , target ) \u00b6 Navigate to the personal preferences settings page","title":"Selenium Navigation"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_address_book_menu","text":"Navigate to the address book menu","title":"navigate_address_book_menu"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_admin_alarms","text":"Navigate to the admin alarms settings menu","title":"navigate_admin_alarms"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_admin_cli","text":"Navigate to the admin cli shell menu","title":"navigate_admin_cli"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_admin_configuration","text":"Navigate to the admin configuration settings menu","title":"navigate_admin_configuration"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_admin_groups","text":"Navigate to the admin groups settings menu","title":"navigate_admin_groups"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_admin_locks","text":"Navigate to the admin locks settings menu","title":"navigate_admin_locks"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_admin_permissions","text":"Navigate to the admin permissions settings menu","title":"navigate_admin_permissions"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_admin_php_shell","text":"Navigate to the admin php shell menu","title":"navigate_admin_php_shell"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_admin_sessions","text":"Navigate to the admin sessions settings menu","title":"navigate_admin_sessions"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_admin_sql_shell","text":"Navigate to the admin sql shell menu","title":"navigate_admin_sql_shell"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_admin_users","text":"Navigate to the admin user settings menu","title":"navigate_admin_users"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_calendar_menu","text":"Navigate to the calendar menu","title":"navigate_calendar_menu"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_mail_menu","text":"Navigate to the mails menu","title":"navigate_mail_menu"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_notes_menu","text":"Navigate to the notes menu","title":"navigate_notes_menu"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_preferences_global","text":"Navigate to the preferences menu","title":"navigate_preferences_global"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_tasks_menu","text":"Navigate to the tasks menu","title":"navigate_tasks_menu"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.GoToHordeWebsite","text":"Go to horde action opens horde The url can be configured","title":"GoToHordeWebsite"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.NavigateMainMenu","text":"Base class for navigation on the main menu","title":"NavigateMainMenu"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.NavigateSettingsMenu","text":"Base class for settings menu navigation","title":"NavigateSettingsMenu"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_address_book_browse","text":"Navigate to the address book browse sub page","title":"navigate_address_book_browse()"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_address_book_contact","text":"Navigate to the contact view for a random contact","title":"navigate_address_book_contact()"},{"location":"statemachines/horde_user/nav/#cr_kyoushi.statemachines.horde_user.nav.navigate_preferences_personal","text":"Navigate to the personal preferences settings page","title":"navigate_preferences_personal()"},{"location":"statemachines/horde_user/sm/","text":"Horde User ( ait.horde_user ) \u00b6 The Horde user activity simulates a user of the group ware software Horde most notably its web mail feature. It has various sub activities for the specific horde menus e.g.m mails, calendar, etc. Horde user state machine Configuration \u00b6 Configuration classes for the horde user activity and state machine ActivitySelectionConfig pydantic-model \u00b6 Horde user state machines selecting activity states configuration. horde: float pydantic-field \u00b6 The base propability that horde will be selected. idle: float pydantic-field \u00b6 The base propability that idle will be selected. AddressBookPageConfig pydantic-model \u00b6 The address book page states configuration browse_contacts: float pydantic-field \u00b6 The base propability that browse contacts will be selected. extra: ActivityExtraConfig pydantic-field \u00b6 Extra configuration for the state new_contact: float pydantic-field \u00b6 The base propability that new contact will be selected. return_: float pydantic-field \u00b6 The base propability that the activity will be left. AdminGroupsPageConfig pydantic-model \u00b6 The admin groups pages states configuration extra: ActivityExtraConfig pydantic-field \u00b6 Extra configuration for the state group_add: float pydantic-field \u00b6 The base propability that group add will be selected. group_delete: float pydantic-field \u00b6 The base propability that groupe delete will be selected. return_: float pydantic-field \u00b6 The base propability that the activity will be left. AdminPageConfig pydantic-model \u00b6 The admin page states configuration extra: ActivityExtraConfig pydantic-field \u00b6 Extra configuration for the state nav_alarms: float pydantic-field \u00b6 The base propability that nav alarms will be selected. nav_cli_shell: float pydantic-field \u00b6 The base propability that nav cli shell will be selected. nav_config: float pydantic-field \u00b6 The base propability that nav config will be selected. nav_groups: float pydantic-field \u00b6 The base propability that nav groups will be selected. nav_locks: float pydantic-field \u00b6 The base propability that nav locks will be selected. nav_permissions: float pydantic-field \u00b6 The base propability that nav permissions will be selected. nav_php_shell: float pydantic-field \u00b6 The base propability that nav php shell will be selected. nav_sessions: float pydantic-field \u00b6 The base propability that nav sessions will be selected. nav_sql_shell: float pydantic-field \u00b6 The base propability that nav sql shell will be selected. nav_users: float pydantic-field \u00b6 The base propability that nav users will be selected. return_: float pydantic-field \u00b6 The base propability that the activity will be left. CalendarPageConfig pydantic-model \u00b6 The calendar page states configuration edit_event: float pydantic-field \u00b6 The base propability that edit event will be selected. extra: ActivityExtraConfig pydantic-field \u00b6 Extra configuration for the state new_event: float pydantic-field \u00b6 The base propability that new event will be selected. return_: float pydantic-field \u00b6 The base propability that the activity will be left. ContactInfoConfig pydantic-model \u00b6 The contact info states configuration delete_contact: float pydantic-field \u00b6 The base propability that delete contact will be selected. do_nothing: float pydantic-field \u00b6 The base propability that do nothing will be selected. ContactsBrowserConfig pydantic-model \u00b6 The contacts browser states configuration new_contact: float pydantic-field \u00b6 The base propability that new contact will be selected. view_contact: float pydantic-field \u00b6 The base propability that view contact will be selected. EventEditConfig pydantic-model \u00b6 The event edit states configuration delete_event: float pydantic-field \u00b6 The base propability that delete event will be selected. write_event: float pydantic-field \u00b6 The base propability that write event will be selected. HordeConfig pydantic-model \u00b6 Configuration class for the horde user first_name: str pydantic-field \u00b6 The firstname of the horde user last_name: str pydantic-field \u00b6 The lastname of the horde user mail: HordeMailConfig pydantic-field \u00b6 The mail configuration for the horde user max_daily: int pydantic-field \u00b6 The maximum amount of times the horde activity will be entered per day password: str pydantic-field \u00b6 The horde users password url: HttpUrl pydantic-field \u00b6 The horde servers base URL username: str pydantic-field \u00b6 The horde user HordeMailConfig pydantic-model \u00b6 Configuration class for the horde users mail activities attachment: float pydantic-field \u00b6 The propability that an attachment is added to a new email attachment_reply: float pydantic-field \u00b6 The propability that an attachment is added to a reply attachments: float pydantic-field \u00b6 A dict of attachment files the user might send contacts: float pydantic-field \u00b6 The email contacts for the horde user extra_recipient: float pydantic-field \u00b6 The propability that an additional recipient is added to a mail max_recipients: int pydantic-field \u00b6 The maximum amount of recipients HordeStates pydantic-model \u00b6 Configuration class for all horde activity states. address_book_page: AddressBookPageConfig pydantic-field \u00b6 The address book page states config admin_groups_page: AdminGroupsPageConfig pydantic-field \u00b6 The admin groups page states config admin_page: AdminPageConfig pydantic-field \u00b6 The admin page states config calendar_page: CalendarPageConfig pydantic-field \u00b6 The calendar page states config contact_info: ContactInfoConfig pydantic-field \u00b6 The contact info states config contacts_browser: ContactsBrowserConfig pydantic-field \u00b6 The contacts browser states config event_edit: EventEditConfig pydantic-field \u00b6 The event edit states config login_page: LoginPageConfig pydantic-field \u00b6 The login page states config logout_choice: LogoutChoiceConfig pydantic-field \u00b6 The logout choice states config mail_info: MailInfoConfig pydantic-field \u00b6 The mail info states config mail_view: MailViewConfig pydantic-field \u00b6 The mail view states config mails_page: MailsPageConfig pydantic-field \u00b6 The mails page states config note_editor: NoteEditorConfig pydantic-field \u00b6 The note editor states config notes_page: NotesPageConfig pydantic-field \u00b6 The notes page states config selecting_menu: SelectingMenuConfig pydantic-field \u00b6 The selecting menu states config tasks_page: TasksPageConfig pydantic-field \u00b6 The tasks page states config HordeUserStates pydantic-model \u00b6 Configuration class for the horde state machine states selecting_activity: ActivitySelectionConfig pydantic-field \u00b6 The selecting activity states config LoginPageConfig pydantic-model \u00b6 The login page states configuration fail_chance: float pydantic-field \u00b6 The chance the user will use an incorrect password fail_decrease: float pydantic-field \u00b6 Multiplicative modifier used for decreasing the chance of failed logins with each consecutive fail LogoutChoiceConfig pydantic-model \u00b6 The logout choice states configuration logout_chance: float pydantic-field \u00b6 The chance the user will logout when stopping the horde activity MailInfoConfig pydantic-model \u00b6 The mail info states configuration delete_mail: float pydantic-field \u00b6 The base propability that delete mail will be selected. reply_mail: float pydantic-field \u00b6 The base propability that reply mail will be selected. MailsPageConfig pydantic-model \u00b6 The mails page states configuration extra: ActivityExtraConfig pydantic-field \u00b6 Extra configuration for the state new_mail: float pydantic-field \u00b6 The base propability that new mail will be selected. refresh_mail: float pydantic-field \u00b6 The base propability that refresh mail will be selected. return_: float pydantic-field \u00b6 The base propability that the activity will be left. view_mail: float pydantic-field \u00b6 The base propability that view mail will be selected. MailViewConfig pydantic-model \u00b6 The mail view states configuration delete_mail: float pydantic-field \u00b6 The base propability that delete mail will be selected. do_nothing: float pydantic-field \u00b6 The base propability that do nothing will be selected. open_mail: float pydantic-field \u00b6 The base propability that open mail will be selected. NoteEditorConfig pydantic-model \u00b6 The note editor states configuration delete_note: float pydantic-field \u00b6 The base propability that delete note will be selected. write_note: float pydantic-field \u00b6 The base propability that write note will be selected. NotesPageConfig pydantic-model \u00b6 The notes page states configuration edit_note: float pydantic-field \u00b6 The base propability that edit note will be selected. extra: ActivityExtraConfig pydantic-field \u00b6 Extra configuration for the state new_note: float pydantic-field \u00b6 The base propability that new note will be selected. return_: float pydantic-field \u00b6 The base propability that the activity will be left. SelectingMenuConfig pydantic-model \u00b6 The selecting menu states configuration extra: ActivityExtraConfig pydantic-field \u00b6 Extra configuration for the state nav_address_book: float pydantic-field \u00b6 The base propability that nav_address_book will be selected. nav_admin: float pydantic-field \u00b6 The base propability that nav_admin will be selected. nav_calendar: float pydantic-field \u00b6 The base propability that nav_calendar will be selected. nav_mail: float pydantic-field \u00b6 The base propability that nav_mail will be selected. nav_notes: float pydantic-field \u00b6 The base propability that nav_notes will be selected. nav_preferences: float pydantic-field \u00b6 The base propability that nav_preferences will be selected. nav_tasks: float pydantic-field \u00b6 The base propability that nav_tasks will be selected. return_: float pydantic-field \u00b6 The base propability that the activity will be left. StatemachineConfig pydantic-model \u00b6 Web browser state machine configuration model Examples: max_errors : 0 start_time : 2021-01-23T9:00 end_time : 2021-01-29T00:01 schedule : work_days : monday : start_time : 09:00 end_time : 17:30 friday : start_time : 11:21 end_time : 19:43 selenium : driver_manager : cache_valid_range : 5 # days type : firefox window_width : 800 window_height : 600 accept_insecure_ssl : yes horde: HordeConfig pydantic-field \u00b6 The horde user specific configuration states: HordeUserStates pydantic-field \u00b6 The horde state machines states configuration TasksPageConfig pydantic-model \u00b6 The tasks page states configuration edit_task: float pydantic-field \u00b6 The base propability that edit task will be selected. extra: ActivityExtraConfig pydantic-field \u00b6 Extra configuration for the state new_task: float pydantic-field \u00b6 The base propability that new task will be selected. return_: float pydantic-field \u00b6 The base propability that the activity will be left. Context \u00b6 The horde activities context model classes CalendarEventInfo pydantic-model \u00b6 Info context class used to pass calendar event info between states calendar: str pydantic-field \u00b6 The calendar id description: str pydantic-field \u00b6 The event description end: datetime pydantic-field \u00b6 The event end date and time id: str pydantic-field \u00b6 The event id location: str pydantic-field \u00b6 The event location start: datetime pydantic-field \u00b6 The event start date and time title: str pydantic-field \u00b6 The event title ContactInfo pydantic-model \u00b6 Info context class used to pass contact info between states key: str pydantic-field \u00b6 The contact key name: str pydantic-field \u00b6 The contact full name source: str pydantic-field \u00b6 The contact source id Context \u00b6 Horde state machine context protocol ContextModel pydantic-model \u00b6 Horde state machine context class horde: HordeContext pydantic-field \u00b6 The horde specific context variables GroupInfo pydantic-model \u00b6 Info context class used to pass group info between states gid: int pydantic-field \u00b6 The horde group id name: str pydantic-field \u00b6 The horde group name HordeContext pydantic-model \u00b6 Horde activity specific context class containing various info fields. contact: ContactInfo pydantic-field \u00b6 The contact that is currently beeing modified event: CalendarEventInfo pydantic-field \u00b6 The calendar event that is currently being modified form_field_delay: Union [ float , cr_kyoushi . simulation . model . ApproximateFloat ] pydantic-field \u00b6 The delay to use in between form fields to fill out group: GroupInfo pydantic-field \u00b6 The group that is currently being modified mail: MailInfo pydantic-field \u00b6 The mail that is currently beeing viewed/modified memo: MemoInfo pydantic-field \u00b6 The memo that is currently beeing modified task: TaskInfo pydantic-field \u00b6 The task that is currently beeing modified MailInfo pydantic-model \u00b6 Info context class used to pass mail info between states attachment: FilePath pydantic-field \u00b6 The source path of the mail attachment buid: int pydantic-field \u00b6 The mail id that is being viewed/replied to content: str pydantic-field \u00b6 The mail content mailbox: str pydantic-field \u00b6 The mailbox id of the message that is being viewed/replied to recipients: str pydantic-field \u00b6 The mail recipients send_type: MailSendType pydantic-field \u00b6 The mail send type that is being composed for subject: str pydantic-field \u00b6 The mail subject line MailSendType \u00b6 Mail send types enum FORWARD \u00b6 Email forwards NEW \u00b6 New emails REPLY \u00b6 Email replies MemoInfo pydantic-model \u00b6 Info context class used to pass memo (note) info between states content: str pydantic-field \u00b6 The memo content id: str pydantic-field \u00b6 The memo id list_id: str pydantic-field \u00b6 The memolist id tags: str pydantic-field \u00b6 The memos tags target_list_id: str pydantic-field \u00b6 The target memolist when editing a memo title: str pydantic-field \u00b6 The memo name TaskInfo pydantic-model \u00b6 Info context class used to pass task info between states id: str pydantic-field \u00b6 The task id list_id: str pydantic-field \u00b6 The tasklist id name: str pydantic-field \u00b6 The task name","title":"State Machine"},{"location":"statemachines/horde_user/sm/#horde-user-aithorde_user","text":"The Horde user activity simulates a user of the group ware software Horde most notably its web mail feature. It has various sub activities for the specific horde menus e.g.m mails, calendar, etc. Horde user state machine","title":"Horde User (ait.horde_user)"},{"location":"statemachines/horde_user/sm/#configuration","text":"Configuration classes for the horde user activity and state machine","title":"Configuration"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.ActivitySelectionConfig","text":"Horde user state machines selecting activity states configuration.","title":"ActivitySelectionConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.AddressBookPageConfig","text":"The address book page states configuration","title":"AddressBookPageConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.AdminGroupsPageConfig","text":"The admin groups pages states configuration","title":"AdminGroupsPageConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.AdminPageConfig","text":"The admin page states configuration","title":"AdminPageConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.CalendarPageConfig","text":"The calendar page states configuration","title":"CalendarPageConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.ContactInfoConfig","text":"The contact info states configuration","title":"ContactInfoConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.ContactsBrowserConfig","text":"The contacts browser states configuration","title":"ContactsBrowserConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.EventEditConfig","text":"The event edit states configuration","title":"EventEditConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.HordeConfig","text":"Configuration class for the horde user","title":"HordeConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.HordeMailConfig","text":"Configuration class for the horde users mail activities","title":"HordeMailConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.HordeStates","text":"Configuration class for all horde activity states.","title":"HordeStates"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.HordeUserStates","text":"Configuration class for the horde state machine states","title":"HordeUserStates"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.LoginPageConfig","text":"The login page states configuration","title":"LoginPageConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.LogoutChoiceConfig","text":"The logout choice states configuration","title":"LogoutChoiceConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.MailInfoConfig","text":"The mail info states configuration","title":"MailInfoConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.MailsPageConfig","text":"The mails page states configuration","title":"MailsPageConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.MailViewConfig","text":"The mail view states configuration","title":"MailViewConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.NoteEditorConfig","text":"The note editor states configuration","title":"NoteEditorConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.NotesPageConfig","text":"The notes page states configuration","title":"NotesPageConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.SelectingMenuConfig","text":"The selecting menu states configuration","title":"SelectingMenuConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.StatemachineConfig","text":"Web browser state machine configuration model Examples: max_errors : 0 start_time : 2021-01-23T9:00 end_time : 2021-01-29T00:01 schedule : work_days : monday : start_time : 09:00 end_time : 17:30 friday : start_time : 11:21 end_time : 19:43 selenium : driver_manager : cache_valid_range : 5 # days type : firefox window_width : 800 window_height : 600 accept_insecure_ssl : yes","title":"StatemachineConfig"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.config.TasksPageConfig","text":"The tasks page states configuration","title":"TasksPageConfig"},{"location":"statemachines/horde_user/sm/#context","text":"The horde activities context model classes","title":"Context"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.context.CalendarEventInfo","text":"Info context class used to pass calendar event info between states","title":"CalendarEventInfo"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.context.ContactInfo","text":"Info context class used to pass contact info between states","title":"ContactInfo"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.context.Context","text":"Horde state machine context protocol","title":"Context"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.context.ContextModel","text":"Horde state machine context class","title":"ContextModel"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.context.GroupInfo","text":"Info context class used to pass group info between states","title":"GroupInfo"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.context.HordeContext","text":"Horde activity specific context class containing various info fields.","title":"HordeContext"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.context.MailInfo","text":"Info context class used to pass mail info between states","title":"MailInfo"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.context.MailSendType","text":"Mail send types enum","title":"MailSendType"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.context.MemoInfo","text":"Info context class used to pass memo (note) info between states","title":"MemoInfo"},{"location":"statemachines/horde_user/sm/#cr_kyoushi.statemachines.horde_user.context.TaskInfo","text":"Info context class used to pass task info between states","title":"TaskInfo"},{"location":"statemachines/horde_user/states/","text":"AdminCLIShellPage \u00b6 The horde cli shell state AdminGroupAdded \u00b6 The horde group added state AdminGroupDeleting \u00b6 The horde admin group deleting state AdminPHPShellPage \u00b6 The horde php shell page state AdminSQLShellPage \u00b6 The horde sql shell state ContactCompose \u00b6 The horde contact compose state ContactDeleteConfirming \u00b6 The horde contact delete confirming state EventCompose \u00b6 The horde event compose state MailCompose \u00b6 The horde mail compose state NoteCreator \u00b6 The horde note creator state PreferencesPage \u00b6 The horde preferences page state PreferencesPersonalPage \u00b6 The horde preferences personal page state TaskCreator \u00b6 The horde task creator state TaskEditor \u00b6 The horde task editor state ActivitySelectionState \u00b6 The main activity selection state for the horde user. This will decide between either entering the horde activity or idling. __init__ ( self , name , horde_transition , idle_transition , horde_max_daily = 10 , horde_weight = 0.6 , idle_weight = 0.4 , name_prefix = None ) special \u00b6 Parameters: Name Type Description Default name str The states name required horde_transition Transition The transition to enter the horde activity required idle_transition Transition The idle transition required horde_max_daily int The maximum amount of times to enter the horde activity per day. 10 horde_weight float The propability of entering the horde activity. 0.6 idle_weight float The propability of entering the idle activity. 0.4 adapt_after ( self , log , context , selected ) \u00b6 Increases the horde activity enter count adapt_before ( self , log , context ) \u00b6 Sets the propability of entering the horde activity to 0 if the daylie maximum is reached AddressBookPage \u00b6 The horde address book page state AdminGroupsPage \u00b6 The horde admin groups page state adapt_before ( self , log , context ) \u00b6 Hook to update the weight modifiers before the transition selection. Parameters: Name Type Description Default log The logger for the sm context required context The state machine context required AdminPage \u00b6 The horde admin page state Used to control the selection of all admin sub activities. Similar to how the selecting menu state is used to switch between the higher level horder sub activities. CalendarPage \u00b6 The horde calendar page state adapt_before ( self , log , context ) \u00b6 Hook to update the weight modifiers before the transition selection. Parameters: Name Type Description Default log The logger for the sm context required context The state machine context required ContactInfo \u00b6 The horde contact info state ContactsBrowser \u00b6 The horde contacts browser state adapt_before ( self , log , context ) \u00b6 Hook to update the weight modifiers before the transition selection. Parameters: Name Type Description Default log The logger for the sm context required context The state machine context required EventEdit \u00b6 The horde event edit state LoggedInCheck \u00b6 Dummy state used to detect if the user is already logged in or not. LoginPage \u00b6 The horde login page state adapt_after ( self , log , context , selected ) \u00b6 Reduces the chance of a failing login after each fail LogoutChoice \u00b6 The horde logout choice state Used as a decision state to decide wether the user should logout of horde or simply leave it open in background when pausing the activity. MailInfo \u00b6 The horde mail info state MailsPage \u00b6 The state controling the transitions when the user is on the mails page. __init__ ( self , name , view_mail , new_mail , refresh_mail , ret_transition , view_mail_weight = 0.45 , new_mail_weight = 0.35 , refresh_mail_weight = 0.1 , ret_weight = 0.1 , ret_increase = 1.2 , name_prefix = None ) special \u00b6 Parameters: Name Type Description Default name str The states name required view_mail Transition The transition used to view an email on the page required new_mail Transition The transition used to initiate writing a new email required ret_transition Transition The return to parent activity transition required view_mail_weight float The base weight of the view mail transition 0.45 new_mail_weight float The base weight of the new mail transition 0.35 ret_weight float The base weight of the return transition 0.1 ret_increase The factor to increase the return transitions weight by until it is selected. 1.2 adapt_before ( self , log , context ) \u00b6 Checks if mails are present in the inbox and disables the view mail transition if not. MailView \u00b6 The horde mail view state NoteEditor \u00b6 The horde note editor state NotesPage \u00b6 The horde notes page state adapt_before ( self , log , context ) \u00b6 Hook to update the weight modifiers before the transition selection. Parameters: Name Type Description Default log The logger for the sm context required context The state machine context required SelectingMenu \u00b6 The horde selecting menu state. This is the main state used to switch between the various horde sub activities. __init__ ( self , name , nav_mail , nav_preferences , nav_admin , nav_notes , nav_tasks , nav_address_book , nav_calendar , ret_transition , nav_mail_weight = 0.3 , nav_preferences_weight = 0.1 , nav_admin_weight = 0 , nav_notes_weight = 0.15 , nav_tasks_weight = 0.1 , nav_address_book_weight = 0.125 , nav_calendar_weight = 0.15 , ret_weight = 0.075 , ret_increase = 1.25 , name_prefix = None ) special \u00b6 Parameters: Name Type Description Default name str The states name required ret_transition Transition The return to parent activity transition required ret_weight float The base weight of the return transition 0.075 ret_increase The factor to increase the return transitions weight by until it is selected. 1.25 adapt_after ( self , log , context , selected ) \u00b6 Hook to update the weight modifiers after the transition selection. Parameters: Name Type Description Default log The logger for the sm context required context The state machine context required selected The transition selected in this next call required adapt_before ( self , log , context ) \u00b6 Hook to update the weight modifiers before the transition selection. Parameters: Name Type Description Default log The logger for the sm context required context The state machine context required TasksPage \u00b6 The horde tasks page state adapt_before ( self , log , context ) \u00b6 Hook to update the weight modifiers before the transition selection. Parameters: Name Type Description Default log The logger for the sm context required context The state machine context required","title":"States"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.AdminCLIShellPage","text":"The horde cli shell state","title":"AdminCLIShellPage"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.AdminGroupAdded","text":"The horde group added state","title":"AdminGroupAdded"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.AdminGroupDeleting","text":"The horde admin group deleting state","title":"AdminGroupDeleting"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.AdminPHPShellPage","text":"The horde php shell page state","title":"AdminPHPShellPage"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.AdminSQLShellPage","text":"The horde sql shell state","title":"AdminSQLShellPage"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.ContactCompose","text":"The horde contact compose state","title":"ContactCompose"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.ContactDeleteConfirming","text":"The horde contact delete confirming state","title":"ContactDeleteConfirming"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.EventCompose","text":"The horde event compose state","title":"EventCompose"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.MailCompose","text":"The horde mail compose state","title":"MailCompose"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.NoteCreator","text":"The horde note creator state","title":"NoteCreator"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.PreferencesPage","text":"The horde preferences page state","title":"PreferencesPage"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.PreferencesPersonalPage","text":"The horde preferences personal page state","title":"PreferencesPersonalPage"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.TaskCreator","text":"The horde task creator state","title":"TaskCreator"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.TaskEditor","text":"The horde task editor state","title":"TaskEditor"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.ActivitySelectionState","text":"The main activity selection state for the horde user. This will decide between either entering the horde activity or idling.","title":"ActivitySelectionState"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.AddressBookPage","text":"The horde address book page state","title":"AddressBookPage"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.AdminGroupsPage","text":"The horde admin groups page state","title":"AdminGroupsPage"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.AdminPage","text":"The horde admin page state Used to control the selection of all admin sub activities. Similar to how the selecting menu state is used to switch between the higher level horder sub activities.","title":"AdminPage"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.CalendarPage","text":"The horde calendar page state","title":"CalendarPage"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.ContactInfo","text":"The horde contact info state","title":"ContactInfo"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.ContactsBrowser","text":"The horde contacts browser state","title":"ContactsBrowser"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.EventEdit","text":"The horde event edit state","title":"EventEdit"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.LoggedInCheck","text":"Dummy state used to detect if the user is already logged in or not.","title":"LoggedInCheck"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.LoginPage","text":"The horde login page state","title":"LoginPage"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.LogoutChoice","text":"The horde logout choice state Used as a decision state to decide wether the user should logout of horde or simply leave it open in background when pausing the activity.","title":"LogoutChoice"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.MailInfo","text":"The horde mail info state","title":"MailInfo"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.MailsPage","text":"The state controling the transitions when the user is on the mails page.","title":"MailsPage"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.MailView","text":"The horde mail view state","title":"MailView"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.NoteEditor","text":"The horde note editor state","title":"NoteEditor"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.NotesPage","text":"The horde notes page state","title":"NotesPage"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.SelectingMenu","text":"The horde selecting menu state. This is the main state used to switch between the various horde sub activities.","title":"SelectingMenu"},{"location":"statemachines/horde_user/states/#cr_kyoushi.statemachines.horde_user.states.TasksPage","text":"The horde tasks page state","title":"TasksPage"}]}